["^ ","~:output",["^ ","~:js","goog.provide('mecca.castle');\r\nmecca.castle.mortar_row = (function mecca$castle$mortar_row(x,y,width){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"x1\",\"x1\",-1863922247),x,new cljs.core.Keyword(null,\"x2\",\"x2\",-1362513475),(x + (width * (8))),new cljs.core.Keyword(null,\"y1\",\"y1\",589123466),(y + 3.5),new cljs.core.Keyword(null,\"y2\",\"y2\",-718691301),(y + 3.5),new cljs.core.Keyword(null,\"stroke\",\"stroke\",1741823555),\"black\"], null)], null);\r\n});\r\nmecca.castle.brick_row = (function mecca$castle$brick_row(x,y,width,offset){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"x1\",\"x1\",-1863922247),x,new cljs.core.Keyword(null,\"x2\",\"x2\",-1362513475),(x + ((8) * width)),new cljs.core.Keyword(null,\"y1\",\"y1\",589123466),(1.5 + y),new cljs.core.Keyword(null,\"y2\",\"y2\",-718691301),(1.5 + y),new cljs.core.Keyword(null,\"stroke-width\",\"stroke-width\",716836435),(3),new cljs.core.Keyword(null,\"stroke-dasharray\",\"stroke-dasharray\",-942933855),\"7 1\",new cljs.core.Keyword(null,\"stroke-dashoffset\",\"stroke-dashoffset\",-782320340),offset,new cljs.core.Keyword(null,\"stroke\",\"stroke\",1741823555),\"#c74a0a\"], null)], null);\r\n});\r\nmecca.castle.mortar_columns = (function mecca$castle$mortar_columns(x,y,width,offset){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"x1\",\"x1\",-1863922247),x,new cljs.core.Keyword(null,\"x2\",\"x2\",-1362513475),(x + ((8) * width)),new cljs.core.Keyword(null,\"y1\",\"y1\",589123466),(1.5 + y),new cljs.core.Keyword(null,\"y2\",\"y2\",-718691301),(1.5 + y),new cljs.core.Keyword(null,\"stroke-width\",\"stroke-width\",716836435),(3),new cljs.core.Keyword(null,\"stroke-dasharray\",\"stroke-dasharray\",-942933855),\"1 7\",new cljs.core.Keyword(null,\"stroke-dashoffset\",\"stroke-dashoffset\",-782320340),offset,new cljs.core.Keyword(null,\"stroke\",\"stroke\",1741823555),\"black\"], null)], null);\r\n});\r\nmecca.castle.brick_row_pair = (function mecca$castle$brick_row_pair(x,y,width){\r\nreturn new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"g\",\"g\",1738089905),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [mecca.castle.brick_row,x,y,width,(0)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [mecca.castle.mortar_columns,x,y,width,(1)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [mecca.castle.mortar_row,x,y,width], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [mecca.castle.brick_row,x,(y + (4)),width,(4)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [mecca.castle.mortar_columns,x,(y + (4)),width,(5)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [mecca.castle.mortar_row,x,(y + (4)),width], null)], null);\r\n});\r\nmecca.castle.castle_arch = (function mecca$castle$castle_arch(x,y){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"g\",\"g\",1738089905),(function (){var iter__4582__auto__ = (function mecca$castle$castle_arch_$_iter__58297(s__58298){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s__58298__$1 = s__58298;\r\nwhile(true){\r\nvar temp__5735__auto__ = cljs.core.seq(s__58298__$1);\r\nif(temp__5735__auto__){\r\nvar s__58298__$2 = temp__5735__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__58298__$2)){\r\nvar c__4580__auto__ = cljs.core.chunk_first(s__58298__$2);\r\nvar size__4581__auto__ = cljs.core.count(c__4580__auto__);\r\nvar b__58300 = cljs.core.chunk_buffer(size__4581__auto__);\r\nif((function (){var i__58299 = (0);\r\nwhile(true){\r\nif((i__58299 < size__4581__auto__)){\r\nvar vec__58301 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4580__auto__,i__58299);\r\nvar dy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__58301,(0),null);\r\nvar dx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__58301,(1),null);\r\ncljs.core.chunk_append(b__58300,cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"x1\",\"x1\",-1863922247),(x + ((40) - dx)),new cljs.core.Keyword(null,\"x2\",\"x2\",-1362513475),((x + (40)) + dx),new cljs.core.Keyword(null,\"y1\",\"y1\",589123466),(48.5 + dy),new cljs.core.Keyword(null,\"y2\",\"y2\",-718691301),(48.5 + dy),new cljs.core.Keyword(null,\"stroke\",\"stroke\",1741823555),\"black\",new cljs.core.Keyword(null,\"stroke-width\",\"stroke-width\",716836435),2.1], null)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [dy,dx], null)], null)));\r\n\r\nvar G__58411 = (i__58299 + (1));\r\ni__58299 = G__58411;\r\ncontinue;\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__58300),mecca$castle$castle_arch_$_iter__58297(cljs.core.chunk_rest(s__58298__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__58300),null);\r\n}\r\n} else {\r\nvar vec__58304 = cljs.core.first(s__58298__$2);\r\nvar dy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__58304,(0),null);\r\nvar dx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__58304,(1),null);\r\nreturn cljs.core.cons(cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"x1\",\"x1\",-1863922247),(x + ((40) - dx)),new cljs.core.Keyword(null,\"x2\",\"x2\",-1362513475),((x + (40)) + dx),new cljs.core.Keyword(null,\"y1\",\"y1\",589123466),(48.5 + dy),new cljs.core.Keyword(null,\"y2\",\"y2\",-718691301),(48.5 + dy),new cljs.core.Keyword(null,\"stroke\",\"stroke\",1741823555),\"black\",new cljs.core.Keyword(null,\"stroke-width\",\"stroke-width\",716836435),2.1], null)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [dy,dx], null)], null)),mecca$castle$castle_arch_$_iter__58297(cljs.core.rest(s__58298__$2)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}),null,null));\r\n});\r\nreturn iter__4582__auto__(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [16.5,(3)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [17.5,(5)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [18.5,(6)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [20.5,(7)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [21.5,(7)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [22.5,(8)], null)], null));\r\n})()], null);\r\n});\r\nmecca.castle.castle_door = (function mecca$castle$castle_door(x,y){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"g\",\"g\",1738089905),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"rect\",\"rect\",-108902628),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"x\",\"x\",2099068185),x,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),y,new cljs.core.Keyword(null,\"width\",\"width\",-384071477),(16),new cljs.core.Keyword(null,\"height\",\"height\",1025178622),(24),new cljs.core.Keyword(null,\"fill\",\"fill\",883462889),\"black\"], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [mecca.castle.castle_arch,(x - (32)),y], null)], null);\r\n});\r\nmecca.castle.castle_roof = (function mecca$castle$castle_roof(x,y,width){\r\nreturn new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"g\",\"g\",1738089905),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"x1\",\"x1\",-1863922247),x,new cljs.core.Keyword(null,\"x2\",\"x2\",-1362513475),(x + width),new cljs.core.Keyword(null,\"y1\",\"y1\",589123466),(y + 0.5),new cljs.core.Keyword(null,\"y2\",\"y2\",-718691301),(y + 0.5),new cljs.core.Keyword(null,\"stroke-width\",\"stroke-width\",716836435),(1),new cljs.core.Keyword(null,\"stroke-dasharray\",\"stroke-dasharray\",-942933855),\"9 7\",new cljs.core.Keyword(null,\"stroke-dashoffset\",\"stroke-dashoffset\",-782320340),(-11),new cljs.core.Keyword(null,\"stroke\",\"stroke\",1741823555),\"#fbbbaf\"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"x1\",\"x1\",-1863922247),x,new cljs.core.Keyword(null,\"x2\",\"x2\",-1362513475),(x + width),new cljs.core.Keyword(null,\"y1\",\"y1\",589123466),(y + (4)),new cljs.core.Keyword(null,\"y2\",\"y2\",-718691301),(y + (4)),new cljs.core.Keyword(null,\"stroke-width\",\"stroke-width\",716836435),(6),new cljs.core.Keyword(null,\"stroke-dasharray\",\"stroke-dasharray\",-942933855),\"1 7\",new cljs.core.Keyword(null,\"stroke-dashoffset\",\"stroke-dashoffset\",-782320340),(5),new cljs.core.Keyword(null,\"stroke\",\"stroke\",1741823555),\"#fbbbaf\"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"x1\",\"x1\",-1863922247),x,new cljs.core.Keyword(null,\"x2\",\"x2\",-1362513475),(x + width),new cljs.core.Keyword(null,\"y1\",\"y1\",589123466),(y + (4)),new cljs.core.Keyword(null,\"y2\",\"y2\",-718691301),(y + (4)),new cljs.core.Keyword(null,\"stroke-width\",\"stroke-width\",716836435),(6),new cljs.core.Keyword(null,\"stroke-dasharray\",\"stroke-dasharray\",-942933855),\"7 9\",new cljs.core.Keyword(null,\"stroke-dashoffset\",\"stroke-dashoffset\",-782320340),(4),new cljs.core.Keyword(null,\"stroke\",\"stroke\",1741823555),\"#c74a0a\"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"x1\",\"x1\",-1863922247),x,new cljs.core.Keyword(null,\"x2\",\"x2\",-1362513475),(x + width),new cljs.core.Keyword(null,\"y1\",\"y1\",589123466),(y + 7.5),new cljs.core.Keyword(null,\"y2\",\"y2\",-718691301),(y + 7.5),new cljs.core.Keyword(null,\"stroke-width\",\"stroke-width\",716836435),(1),new cljs.core.Keyword(null,\"stroke-dasharray\",\"stroke-dasharray\",-942933855),\"9 7\",new cljs.core.Keyword(null,\"stroke-dashoffset\",\"stroke-dashoffset\",-782320340),(-11),new cljs.core.Keyword(null,\"stroke\",\"stroke\",1741823555),\"black\"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"x1\",\"x1\",-1863922247),x,new cljs.core.Keyword(null,\"x2\",\"x2\",-1362513475),(x + width),new cljs.core.Keyword(null,\"y1\",\"y1\",589123466),(y + 7.5),new cljs.core.Keyword(null,\"y2\",\"y2\",-718691301),(y + 7.5),new cljs.core.Keyword(null,\"stroke-width\",\"stroke-width\",716836435),(1),new cljs.core.Keyword(null,\"stroke-dasharray\",\"stroke-dasharray\",-942933855),\"9 7\",new cljs.core.Keyword(null,\"stroke-dashoffset\",\"stroke-dashoffset\",-782320340),(13),new cljs.core.Keyword(null,\"stroke\",\"stroke\",1741823555),\"#fbbbaf\"], null)], null)], null);\r\n});\r\nmecca.castle.brick_face = (function mecca$castle$brick_face(x,y,width){\r\nreturn new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"g\",\"g\",1738089905),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"transform\",\"transform\",1381301764),\"scale (0.15)\",new cljs.core.Keyword(null,\"opacity\",\"opacity\",397153780),(1)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [mecca.castle.castle_roof,x,y,((8) * width)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [mecca.castle.brick_row_pair,x,(y + (8)),width], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [mecca.castle.brick_row_pair,x,(y + (16)),width], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [mecca.castle.brick_row_pair,x,(y + (24)),width], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [mecca.castle.brick_row_pair,x,(y + (32)),width], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [mecca.castle.brick_row_pair,x,(y + (40)),width], null),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(width,(10)))?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [mecca.castle.castle_door,((32) + x),(y + (24))], null):null)], null);\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","mecca/castle.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",17],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$mecca.castle","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.core","^M","~$goog","^N"],"~:seen",["^F",[]],"~:uses",null,"~:require-macros",["^ ","^M","^M"],"~:form",["~#list",["~$ns","^H"]],"~:flags",["^ "],"~:js-deps",["^ "],"~:deps",["^N","^M"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","mecca/castle.cljs"],"~:compiled-at",1607248064738,"~:resource-name","mecca/castle.cljs","~:warnings",[],"~:source","(ns mecca.castle)\r\n\r\n(defn mortar-row [x y width]\r\n  [:line {:x1 x :x2 (+ x (* width 8))\r\n          :y1 (+ y 3.5) :y2 (+ y 3.5)\r\n          :stroke \"black\"}])\r\n\r\n(defn brick-row [x y width offset]\r\n  [:line {:x1 x :x2 (+ x (* 8 width))\r\n          :y1 (+ 1.5 y) :y2 (+ 1.5 y)\r\n          :stroke-width 3\r\n          :stroke-dasharray \"7 1\"\r\n          :stroke-dashoffset offset\r\n          :stroke \"#c74a0a\"}])\r\n\r\n(defn mortar-columns [x y width offset]\r\n  [:line {:x1 x :x2 (+ x (* 8 width))\r\n          :y1 (+ 1.5 y) :y2 (+ 1.5 y)\r\n          :stroke-width 3\r\n          :stroke-dasharray \"1 7\"\r\n          :stroke-dashoffset offset\r\n          :stroke \"black\"}])\r\n\r\n(defn brick-row-pair [x y width]\r\n  [:g\r\n   [brick-row x y width 0]\r\n   [mortar-columns x y width 1]\r\n   [mortar-row x y width]\r\n   [brick-row x (+ y 4) width 4]\r\n   [mortar-columns x (+ y 4) width 5]\r\n   [mortar-row x (+ y 4) width]])\r\n\r\n(defn castle-arch [x y]\r\n  [:g (for [[dy dx] [[16.5 3] [17.5 5] [18.5 6] [20.5 7] [21.5 7] [22.5 8]]]\r\n        ^{:key [dy dx]}\r\n        [:line {:x1 (+ x (- 40 dx)) :x2 (+ x 40 dx)\r\n                :y1 (+ 48.5 dy) :y2 (+ 48.5 dy)\r\n                :stroke \"black\"\r\n                :stroke-width 2.1}])])\r\n\r\n(defn castle-door [x y]\r\n  [:g\r\n   [:rect {:x x :y y\r\n           :width 16\r\n           :height 24\r\n           :fill \"black\"}]\r\n   [castle-arch (- x 32) y]])\r\n\r\n(defn castle-roof [x y width]\r\n  [:g\r\n   [:line {:x1 x :x2 (+ x width)\r\n           :y1 (+ y 0.5) :y2 (+ y 0.5)\r\n           :stroke-width 1\r\n           :stroke-dasharray \"9 7\"\r\n           :stroke-dashoffset -11\r\n           :stroke \"#fbbbaf\"}]\r\n   [:line {:x1 x :x2 (+ x width)\r\n           :y1 (+ y 4) :y2 (+ y 4)\r\n           :stroke-width 6\r\n           :stroke-dasharray \"1 7\"\r\n           :stroke-dashoffset 5\r\n           :stroke \"#fbbbaf\"}]\r\n   [:line {:x1 x :x2 (+ x width)\r\n           :y1 (+ y 4) :y2 (+ y 4)\r\n           :stroke-width 6\r\n           :stroke-dasharray \"7 9\"\r\n           :stroke-dashoffset 4\r\n           :stroke \"#c74a0a\"}]\r\n   [:line {:x1 x :x2 (+ x width)\r\n           :y1 (+ y 7.5) :y2 (+ y 7.5)\r\n           :stroke-width 1\r\n           :stroke-dasharray \"9 7\"\r\n           :stroke-dashoffset -11\r\n           :stroke \"black\"}]\r\n   [:line {:x1 x :x2 (+ x width)\r\n           :y1 (+ y 7.5) :y2 (+ y 7.5)\r\n           :stroke-width 1\r\n           :stroke-dasharray \"9 7\"\r\n           :stroke-dashoffset 13\r\n           :stroke \"#fbbbaf\"}]])\r\n\r\n(defn brick-face [x y width]\r\n  [:g {:transform \"scale (0.15)\"\r\n       :opacity 1}\r\n   [castle-roof x y (* 8 width)]\r\n   [brick-row-pair x (+ y 8) width]\r\n   [brick-row-pair x (+ y 16) width]\r\n   [brick-row-pair x (+ y 24) width]\r\n   [brick-row-pair x (+ y 32) width]\r\n   [brick-row-pair x (+ y 40) width]\r\n   (if (= width 10)\r\n     [castle-door (+ 32 x) (+ y 24)])])","~:reader-features",["^F",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["mecca.castle/mortar-row","x","y","width","mecca.castle/brick-row","offset","mecca.castle/mortar-columns","mecca.castle/brick-row-pair","mecca.castle/castle-arch","iter__4582__auto__","s__58298","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__58300","cljs.core/chunk-buffer","i__58299","vec__58301","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__58297","cljs.core/chunk-rest","vec__58304","cljs.core/first","cljs.core/cons","cljs.core/rest","dy","dx","mecca.castle/castle-door","mecca.castle/castle-roof","mecca.castle/brick-face","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-first"]]],"~:cache-keys",["~#cmap",[["^Y","goog/dom/tagname.js"],[1604233662695,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["^N","~$goog.dom.HtmlElement"]]],["^Y","goog/math/math.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","~$goog.array","~$goog.asserts"]]],["^Y","goog/html/trustedtypes.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N"]]],["^Y","goog/labs/useragent/browser.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","^1?","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^Y","goog/html/safeurl.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","^1@","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^1C"]]],["^Y","goog/array/array.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","^1@"]]],["^Y","goog/debug/error.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N"]]],["^Y","goog/dom/nodetype.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N"]]],["^Y","goog/string/typedstring.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N"]]],["^Y","goog/object/object.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N"]]],["^Y","goog/dom/asserts.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","^1@"]]],"~:SHADOW-TIMESTAMP",[1604233907000,1604233898000],["^Y","goog/math/long.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","^1@","~$goog.reflect"]]],["^Y","goog/html/trustedresourceurl.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","^1@","~$goog.html.trustedtypes","^1F","^1G","^1H","^1I"]]],["^Y","goog/string/internal.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N"]]],["^Y","goog/functions/functions.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N"]]],["^Y","goog/html/safestyle.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","^1?","^1@","~$goog.html.SafeUrl","^1H","^1I","^1C"]]],["^Y","goog/dom/safe.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","^1@","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^1M","^1E","~$goog.html.uncheckedconversions","^1H","^1C"]]],["^Y","goog/structs/map.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^Y","goog/html/safehtml.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","^1?","^1@","~$goog.dom.TagName","~$goog.dom.tags","^1Q","^1R","~$goog.html.SafeStyleSheet","^1M","^1E","^1L","^1F","^1G","~$goog.labs.userAgent.browser","^1B","^1H","^1I","^1C"]]],["^Y","goog/dom/tags.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","^1B"]]],["^Y","goog/asserts/asserts.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^Y","goog/uri/uri.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","^1?","^1@","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^Y","goog/i18n/bidi.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N"]]],["^Y","goog/fs/url.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N"]]],["^Y","goog/base.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",[]]],["^Y","goog/structs/structs.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","^1?","^1B"]]],["^Y","mecca/castle.cljs"],[1603309152377,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","^M"]]],["^Y","goog/string/string.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","~$goog.dom.safe","^1S","^1H","^1C"]]],["^Y","goog/reflect/reflect.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N"]]],["^Y","goog/labs/useragent/util.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","^1C"]]],["^Y","goog/string/stringbuffer.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N"]]],["^Y","goog/iter/iter.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","^1?","^1@","^1O","~$goog.math"]]],["^Y","goog/html/uncheckedconversions.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","^1@","^1P","^1Q","^1R","^1X","^1M","^1E","^1H","^1C"]]],["^Y","goog/dom/htmlelement.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N"]]],["^Y","cljs/core.cljs"],[1604233898486,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["~$goog.math.Long","~$goog.math.Integer","^20","^1B","^1?","~$goog.Uri","~$goog.string.StringBuffer"]]],["^Y","goog/html/safescript.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","^1@","^1L","^1H","^1I"]]],["^Y","goog/html/safestylesheet.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","^1?","^1@","^1R","^1B","^1H","^1I","^1C"]]],["^Y","goog/math/integer.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","^1K"]]],["^Y","goog/uri/utils.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","^1?","^1@","^20"]]],["^Y","goog/string/const.js"],[1604233662695,"^1:",["^ ","^1;",null,"^1<",["^F",[]],"^1=",["^N","^1@","^1I"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1591214217000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/compiler.cljc",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env.cljc",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/tagged_literals.cljc",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/js_deps.cljc",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1591214217000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1591214217000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1591726260000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1591214217000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1591726260000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1591214217000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64.clj",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1591732625000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/externs.clj",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1591214217000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1591726260000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/util.cljc",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1591726260000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/core.cljc",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1591214217000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer.cljc",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64_vlq.clj",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map.clj",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1591726260000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","mecca/castle.cljs","^7",1,"^8",5,"^9",1,"^:",17],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^N"],"^O",["^F",[]],"^P",null,"~:defs",["^ ","~$mortar-row",["^ ","~:protocol-inline",null,"^5",["^ ","^6","mecca/castle.cljs","^7",3,"^8",7,"^9",3,"^:",17,"~:arglists",["^S",["~$quote",["^S",[["~$x","~$y","~$width"]]]]]],"^G","~$mecca.castle/mortar-row","^6","mecca/castle.cljs","^:",17,"~:method-params",["^S",[["~$x","~$y","^2["]]],"~:protocol-impl",null,"~:arglists-meta",["^S",[null,null]],"^8",1,"~:variadic?",false,"^7",3,"~:ret-tag","~$cljs.core/IVector","^9",3,"~:max-fixed-arity",3,"~:fn-var",true,"^2Y",["^S",["^2Z",["^S",[["~$x","~$y","^2["]]]]]],"~$brick-row",["^ ","^2X",null,"^5",["^ ","^6","mecca/castle.cljs","^7",8,"^8",7,"^9",8,"^:",16,"^2Y",["^S",["^2Z",["^S",[["~$x","~$y","^2[","~$offset"]]]]]],"^G","~$mecca.castle/brick-row","^6","mecca/castle.cljs","^:",16,"^31",["^S",[["~$x","~$y","^2[","^3:"]]],"^32",null,"^33",["^S",[null,null]],"^8",1,"^34",false,"^7",8,"^35","^36","^9",8,"^37",4,"^38",true,"^2Y",["^S",["^2Z",["^S",[["~$x","~$y","^2[","^3:"]]]]]],"~$mortar-columns",["^ ","^2X",null,"^5",["^ ","^6","mecca/castle.cljs","^7",16,"^8",7,"^9",16,"^:",21,"^2Y",["^S",["^2Z",["^S",[["~$x","~$y","^2[","^3:"]]]]]],"^G","~$mecca.castle/mortar-columns","^6","mecca/castle.cljs","^:",21,"^31",["^S",[["~$x","~$y","^2[","^3:"]]],"^32",null,"^33",["^S",[null,null]],"^8",1,"^34",false,"^7",16,"^35","^36","^9",16,"^37",4,"^38",true,"^2Y",["^S",["^2Z",["^S",[["~$x","~$y","^2[","^3:"]]]]]],"~$brick-row-pair",["^ ","^2X",null,"^5",["^ ","^6","mecca/castle.cljs","^7",24,"^8",7,"^9",24,"^:",21,"^2Y",["^S",["^2Z",["^S",[["~$x","~$y","^2["]]]]]],"^G","~$mecca.castle/brick-row-pair","^6","mecca/castle.cljs","^:",21,"^31",["^S",[["~$x","~$y","^2["]]],"^32",null,"^33",["^S",[null,null]],"^8",1,"^34",false,"^7",24,"^35","^36","^9",24,"^37",3,"^38",true,"^2Y",["^S",["^2Z",["^S",[["~$x","~$y","^2["]]]]]],"~$castle-arch",["^ ","^2X",null,"^5",["^ ","^6","mecca/castle.cljs","^7",33,"^8",7,"^9",33,"^:",18,"^2Y",["^S",["^2Z",["^S",[["~$x","~$y"]]]]]],"^G","~$mecca.castle/castle-arch","^6","mecca/castle.cljs","^:",18,"^31",["^S",[["~$x","~$y"]]],"^32",null,"^33",["^S",[null,null]],"^8",1,"^34",false,"^7",33,"^35","^36","^9",33,"^37",2,"^38",true,"^2Y",["^S",["^2Z",["^S",[["~$x","~$y"]]]]]],"~$castle-door",["^ ","^2X",null,"^5",["^ ","^6","mecca/castle.cljs","^7",41,"^8",7,"^9",41,"^:",18,"^2Y",["^S",["^2Z",["^S",[["~$x","~$y"]]]]]],"^G","~$mecca.castle/castle-door","^6","mecca/castle.cljs","^:",18,"^31",["^S",[["~$x","~$y"]]],"^32",null,"^33",["^S",[null,null]],"^8",1,"^34",false,"^7",41,"^35","^36","^9",41,"^37",2,"^38",true,"^2Y",["^S",["^2Z",["^S",[["~$x","~$y"]]]]]],"~$castle-roof",["^ ","^2X",null,"^5",["^ ","^6","mecca/castle.cljs","^7",49,"^8",7,"^9",49,"^:",18,"^2Y",["^S",["^2Z",["^S",[["~$x","~$y","^2["]]]]]],"^G","~$mecca.castle/castle-roof","^6","mecca/castle.cljs","^:",18,"^31",["^S",[["~$x","~$y","^2["]]],"^32",null,"^33",["^S",[null,null]],"^8",1,"^34",false,"^7",49,"^35","^36","^9",49,"^37",3,"^38",true,"^2Y",["^S",["^2Z",["^S",[["~$x","~$y","^2["]]]]]],"~$brick-face",["^ ","^2X",null,"^5",["^ ","^6","mecca/castle.cljs","^7",82,"^8",7,"^9",82,"^:",17,"^2Y",["^S",["^2Z",["^S",[["~$x","~$y","^2["]]]]]],"^G","~$mecca.castle/brick-face","^6","mecca/castle.cljs","^:",17,"^31",["^S",[["~$x","~$y","^2["]]],"^32",null,"^33",["^S",[null,null]],"^8",1,"^34",false,"^7",82,"^35","^36","^9",82,"^37",3,"^38",true,"^2Y",["^S",["^2Z",["^S",[["~$x","~$y","^2["]]]]]]],"^Q",["^ ","^M","^M"],"~:cljs.analyzer/constants",["^ ","^O",["^F",["~:y","~:stroke-dasharray","~:stroke","~:transform","~:key","~:fill","~:y1","~:width","~:stroke-dashoffset","~:g","^7","~:stroke-width","~:opacity","~:x","~:x1","~:y2","~:rect","~:x2","~:height"]],"~:order",["^7","^3S","^3V","^3N","^3T","^3J","^3Q","^3I","^3P","~:g","^3L","^3U","~:x","~:y","^3O","^3W","^3M","^3K","^3R"]],"^U",["^ "],"^V",["^ "],"^W",["^N","^M"]],"^J","^H","~:ns-specs",["^ "],"~:ns-spec-vars",["^F",[]],"~:compiler-options",["^19",[["^3[","~:static-fns"],true,["^3[","~:shadow-tweaks"],null,["^3[","~:elide-asserts"],true,["^3[","~:optimize-constants"],null,["^3[","^10"],null,["^3[","~:external-config"],null,["^3[","~:tooling-config"],null,["^3[","~:emit-constants"],null,["^3[","~:load-tests"],false,["^3[","~:form-size-threshold"],null,["^3[","~:infer-externs"],true,["^3[","^12"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^3[","~:fn-invoke-direct"],null,["^3[","~:source-map"],null]]]