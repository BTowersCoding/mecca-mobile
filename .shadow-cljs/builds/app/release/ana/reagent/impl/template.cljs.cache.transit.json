["^ ","~:output",["^ ","~:js","goog.provide('reagent.impl.template');\r\n/**\r\n * Regular expression that parses a CSS-style id and class\r\n *           from a tag name.\r\n */\r\nreagent.impl.template.re_tag = /([^\\s\\.#]+)(?:#([^\\s\\.#]+))?(?:\\.([^\\s#]+))?/;\r\n\r\n/**\r\n* @constructor\r\n*/\r\nreagent.impl.template.NativeWrapper = (function (){\r\n});\r\n\r\n(reagent.impl.template.NativeWrapper.getBasis = (function (){\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n}));\r\n\r\n(reagent.impl.template.NativeWrapper.cljs$lang$type = true);\r\n\r\n(reagent.impl.template.NativeWrapper.cljs$lang$ctorStr = \"reagent.impl.template/NativeWrapper\");\r\n\r\n(reagent.impl.template.NativeWrapper.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\r\nreturn cljs.core._write(writer__4429__auto__,\"reagent.impl.template/NativeWrapper\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for reagent.impl.template/NativeWrapper.\r\n */\r\nreagent.impl.template.__GT_NativeWrapper = (function reagent$impl$template$__GT_NativeWrapper(){\r\nreturn (new reagent.impl.template.NativeWrapper());\r\n});\r\n\r\nreagent.impl.template.named_QMARK_ = (function reagent$impl$template$named_QMARK_(x){\r\nreturn (((x instanceof cljs.core.Keyword)) || ((x instanceof cljs.core.Symbol)));\r\n});\r\nreagent.impl.template.hiccup_tag_QMARK_ = (function reagent$impl$template$hiccup_tag_QMARK_(x){\r\nreturn ((reagent.impl.template.named_QMARK_(x)) || (typeof x === 'string'));\r\n});\r\nreagent.impl.template.valid_tag_QMARK_ = (function reagent$impl$template$valid_tag_QMARK_(x){\r\nreturn ((reagent.impl.template.hiccup_tag_QMARK_(x)) || (cljs.core.ifn_QMARK_(x)) || ((x instanceof reagent.impl.template.NativeWrapper)));\r\n});\r\nreagent.impl.template.prop_name_cache = ({\"class\": \"className\", \"for\": \"htmlFor\", \"charset\": \"charSet\"});\r\nreagent.impl.template.cache_get = (function reagent$impl$template$cache_get(o,k){\r\nif(o.hasOwnProperty(k)){\r\nreturn (o[k]);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nreagent.impl.template.cached_prop_name = (function reagent$impl$template$cached_prop_name(k){\r\nif(reagent.impl.template.named_QMARK_(k)){\r\nvar temp__5737__auto__ = reagent.impl.template.cache_get(reagent.impl.template.prop_name_cache,cljs.core.name(k));\r\nif((temp__5737__auto__ == null)){\r\nreturn (reagent.impl.template.prop_name_cache[cljs.core.name(k)] = reagent.impl.util.dash_to_camel(k));\r\n} else {\r\nvar k_SINGLEQUOTE_ = temp__5737__auto__;\r\nreturn k_SINGLEQUOTE_;\r\n}\r\n} else {\r\nreturn k;\r\n}\r\n});\r\nreagent.impl.template.js_val_QMARK_ = (function reagent$impl$template$js_val_QMARK_(x){\r\nreturn (!((\"object\" === goog.typeOf(x))));\r\n});\r\nreagent.impl.template.kv_conv = (function reagent$impl$template$kv_conv(o,k,v){\r\nvar G__54002 = o;\r\n(G__54002[reagent.impl.template.cached_prop_name(k)] = (reagent.impl.template.convert_prop_value.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.convert_prop_value.cljs$core$IFn$_invoke$arity$1(v) : reagent.impl.template.convert_prop_value.call(null,v)));\r\n\r\nreturn G__54002;\r\n});\r\nreagent.impl.template.convert_prop_value = (function reagent$impl$template$convert_prop_value(x){\r\nif(reagent.impl.template.js_val_QMARK_(x)){\r\nreturn x;\r\n} else {\r\nif(reagent.impl.template.named_QMARK_(x)){\r\nreturn cljs.core.name(x);\r\n} else {\r\nif(cljs.core.map_QMARK_(x)){\r\nreturn cljs.core.reduce_kv(reagent.impl.template.kv_conv,({}),x);\r\n} else {\r\nif(cljs.core.coll_QMARK_(x)){\r\nreturn cljs.core.clj__GT_js(x);\r\n} else {\r\nif(cljs.core.ifn_QMARK_(x)){\r\nreturn (function() { \r\nvar G__54107__delegate = function (args){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(x,args);\r\n};\r\nvar G__54107 = function (var_args){\r\nvar args = null;\r\nif (arguments.length > 0) {\r\nvar G__54110__i = 0, G__54110__a = new Array(arguments.length -  0);\r\nwhile (G__54110__i < G__54110__a.length) {G__54110__a[G__54110__i] = arguments[G__54110__i + 0]; ++G__54110__i;}\r\n  args = new cljs.core.IndexedSeq(G__54110__a,0,null);\r\n} \r\nreturn G__54107__delegate.call(this,args);};\r\nG__54107.cljs$lang$maxFixedArity = 0;\r\nG__54107.cljs$lang$applyTo = (function (arglist__54112){\r\nvar args = cljs.core.seq(arglist__54112);\r\nreturn G__54107__delegate(args);\r\n});\r\nG__54107.cljs$core$IFn$_invoke$arity$variadic = G__54107__delegate;\r\nreturn G__54107;\r\n})()\r\n;\r\n} else {\r\nreturn cljs.core.clj__GT_js(x);\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nreagent.impl.template.custom_prop_name_cache = ({});\r\nreagent.impl.template.cached_custom_prop_name = (function reagent$impl$template$cached_custom_prop_name(k){\r\nif(reagent.impl.template.named_QMARK_(k)){\r\nvar temp__5737__auto__ = reagent.impl.template.cache_get(reagent.impl.template.custom_prop_name_cache,cljs.core.name(k));\r\nif((temp__5737__auto__ == null)){\r\nreturn (reagent.impl.template.custom_prop_name_cache[cljs.core.name(k)] = reagent.impl.util.dash_to_camel(k));\r\n} else {\r\nvar k_SINGLEQUOTE_ = temp__5737__auto__;\r\nreturn k_SINGLEQUOTE_;\r\n}\r\n} else {\r\nreturn k;\r\n}\r\n});\r\nreagent.impl.template.custom_kv_conv = (function reagent$impl$template$custom_kv_conv(o,k,v){\r\nvar G__54019 = o;\r\n(G__54019[reagent.impl.template.cached_custom_prop_name(k)] = reagent.impl.template.convert_prop_value(v));\r\n\r\nreturn G__54019;\r\n});\r\nreagent.impl.template.convert_custom_prop_value = (function reagent$impl$template$convert_custom_prop_value(x){\r\nif(reagent.impl.template.js_val_QMARK_(x)){\r\nreturn x;\r\n} else {\r\nif(reagent.impl.template.named_QMARK_(x)){\r\nreturn cljs.core.name(x);\r\n} else {\r\nif(cljs.core.map_QMARK_(x)){\r\nreturn cljs.core.reduce_kv(reagent.impl.template.custom_kv_conv,({}),x);\r\n} else {\r\nif(cljs.core.coll_QMARK_(x)){\r\nreturn cljs.core.clj__GT_js(x);\r\n} else {\r\nif(cljs.core.ifn_QMARK_(x)){\r\nreturn (function() { \r\nvar G__54117__delegate = function (args){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(x,args);\r\n};\r\nvar G__54117 = function (var_args){\r\nvar args = null;\r\nif (arguments.length > 0) {\r\nvar G__54118__i = 0, G__54118__a = new Array(arguments.length -  0);\r\nwhile (G__54118__i < G__54118__a.length) {G__54118__a[G__54118__i] = arguments[G__54118__i + 0]; ++G__54118__i;}\r\n  args = new cljs.core.IndexedSeq(G__54118__a,0,null);\r\n} \r\nreturn G__54117__delegate.call(this,args);};\r\nG__54117.cljs$lang$maxFixedArity = 0;\r\nG__54117.cljs$lang$applyTo = (function (arglist__54121){\r\nvar args = cljs.core.seq(arglist__54121);\r\nreturn G__54117__delegate(args);\r\n});\r\nG__54117.cljs$core$IFn$_invoke$arity$variadic = G__54117__delegate;\r\nreturn G__54117;\r\n})()\r\n;\r\n} else {\r\nreturn cljs.core.clj__GT_js(x);\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nreagent.impl.template.oset = (function reagent$impl$template$oset(o,k,v){\r\nvar G__54020 = (((o == null))?({}):o);\r\n(G__54020[k] = v);\r\n\r\nreturn G__54020;\r\n});\r\nreagent.impl.template.oget = (function reagent$impl$template$oget(o,k){\r\nif((o == null)){\r\nreturn null;\r\n} else {\r\nreturn (o[k]);\r\n}\r\n});\r\n/**\r\n * Takes the id and class from tag keyword, and adds them to the\r\n *   other props. Parsed tag is JS object with :id and :class properties.\r\n */\r\nreagent.impl.template.set_id_class = (function reagent$impl$template$set_id_class(props,id_class){\r\nvar id = (id_class[\"id\"]);\r\nvar class$ = (id_class[\"class\"]);\r\nvar G__54021 = props;\r\nvar G__54021__$1 = (((((!((id == null)))) && ((new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(props) == null))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__54021,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),id):G__54021);\r\nif(cljs.core.truth_(class$)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__54021__$1,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),(function (){var old_class = new cljs.core.Keyword(null,\"class\",\"class\",-2030961996).cljs$core$IFn$_invoke$arity$1(props);\r\nif((old_class == null)){\r\nreturn class$;\r\n} else {\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(class$),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(((reagent.impl.template.named_QMARK_(old_class))?cljs.core.name(old_class):old_class))].join('');\r\n}\r\n})());\r\n} else {\r\nreturn G__54021__$1;\r\n}\r\n});\r\nreagent.impl.template.stringify_class = (function reagent$impl$template$stringify_class(p__54025){\r\nvar map__54026 = p__54025;\r\nvar map__54026__$1 = (((((!((map__54026 == null))))?(((((map__54026.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__54026.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__54026):map__54026);\r\nvar props = map__54026__$1;\r\nvar class$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54026__$1,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996));\r\nif(cljs.core.coll_QMARK_(class$)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(props,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",cljs.core.keep.cljs$core$IFn$_invoke$arity$2((function (c){\r\nif(cljs.core.truth_(c)){\r\nif(reagent.impl.template.named_QMARK_(c)){\r\nreturn cljs.core.name(c);\r\n} else {\r\nreturn c;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}),class$)));\r\n} else {\r\nreturn props;\r\n}\r\n});\r\nreagent.impl.template.convert_props = (function reagent$impl$template$convert_props(props,id_class){\r\nvar props__$1 = reagent.impl.template.set_id_class(reagent.impl.template.stringify_class(props),id_class);\r\nif(cljs.core.truth_((id_class[\"custom\"]))){\r\nreturn reagent.impl.template.convert_custom_prop_value(props__$1);\r\n} else {\r\nreturn reagent.impl.template.convert_prop_value(props__$1);\r\n}\r\n});\r\nif((typeof reagent !== 'undefined') && (typeof reagent.impl !== 'undefined') && (typeof reagent.impl.template !== 'undefined') && (typeof reagent.impl.template.find_dom_node !== 'undefined')){\r\n} else {\r\nreagent.impl.template.find_dom_node = null;\r\n}\r\nreagent.impl.template.these_inputs_have_selection_api = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [\"url\",null,\"tel\",null,\"text\",null,\"textarea\",null,\"password\",null,\"search\",null], null), null);\r\nreagent.impl.template.has_selection_api_QMARK_ = (function reagent$impl$template$has_selection_api_QMARK_(input_type){\r\nreturn cljs.core.contains_QMARK_(reagent.impl.template.these_inputs_have_selection_api,input_type);\r\n});\r\nreagent.impl.template.input_node_set_value = (function reagent$impl$template$input_node_set_value(node,rendered_value,dom_value,component,p__54029){\r\nvar map__54030 = p__54029;\r\nvar map__54030__$1 = (((((!((map__54030 == null))))?(((((map__54030.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__54030.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__54030):map__54030);\r\nvar on_write = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54030__$1,new cljs.core.Keyword(null,\"on-write\",\"on-write\",31519475));\r\nif((!((((node === (document[\"activeElement\"]))) && (reagent.impl.template.has_selection_api_QMARK_((node[\"type\"]))) && (typeof rendered_value === 'string') && (typeof dom_value === 'string'))))){\r\n(component[\"cljsDOMValue\"] = rendered_value);\r\n\r\n(node[\"value\"] = rendered_value);\r\n\r\nif(cljs.core.fn_QMARK_(on_write)){\r\nreturn (on_write.cljs$core$IFn$_invoke$arity$1 ? on_write.cljs$core$IFn$_invoke$arity$1(rendered_value) : on_write.call(null,rendered_value));\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nvar node_value = (node[\"value\"]);\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(node_value,dom_value)){\r\nreturn reagent.impl.batching.do_after_render((function (){\r\nreturn (reagent.impl.template.input_component_set_value.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.input_component_set_value.cljs$core$IFn$_invoke$arity$1(component) : reagent.impl.template.input_component_set_value.call(null,component));\r\n}));\r\n} else {\r\nvar existing_offset_from_end = (cljs.core.count(node_value) - (node[\"selectionStart\"]));\r\nvar new_cursor_offset = (cljs.core.count(rendered_value) - existing_offset_from_end);\r\n(component[\"cljsDOMValue\"] = rendered_value);\r\n\r\n(node[\"value\"] = rendered_value);\r\n\r\nif(cljs.core.fn_QMARK_(on_write)){\r\n(on_write.cljs$core$IFn$_invoke$arity$1 ? on_write.cljs$core$IFn$_invoke$arity$1(rendered_value) : on_write.call(null,rendered_value));\r\n} else {\r\n}\r\n\r\n(node[\"selectionStart\"] = new_cursor_offset);\r\n\r\nreturn (node[\"selectionEnd\"] = new_cursor_offset);\r\n}\r\n}\r\n});\r\nreagent.impl.template.input_component_set_value = (function reagent$impl$template$input_component_set_value(this$){\r\nif(cljs.core.truth_((this$[\"cljsInputLive\"]))){\r\n(this$[\"cljsInputDirty\"] = false);\r\n\r\nvar rendered_value = (this$[\"cljsRenderedValue\"]);\r\nvar dom_value = (this$[\"cljsDOMValue\"]);\r\nvar node = (reagent.impl.template.find_dom_node.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.find_dom_node.cljs$core$IFn$_invoke$arity$1(this$) : reagent.impl.template.find_dom_node.call(null,this$));\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(rendered_value,dom_value)){\r\nreturn reagent.impl.template.input_node_set_value(node,rendered_value,dom_value,this$,cljs.core.PersistentArrayMap.EMPTY);\r\n} else {\r\nreturn null;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nreagent.impl.template.input_handle_change = (function reagent$impl$template$input_handle_change(this$,on_change,e){\r\n(this$[\"cljsDOMValue\"] = e.target.value);\r\n\r\nif(cljs.core.truth_((this$[\"cljsInputDirty\"]))){\r\n} else {\r\n(this$[\"cljsInputDirty\"] = true);\r\n\r\nreagent.impl.batching.do_after_render((function (){\r\nreturn reagent.impl.template.input_component_set_value(this$);\r\n}));\r\n}\r\n\r\nreturn (on_change.cljs$core$IFn$_invoke$arity$1 ? on_change.cljs$core$IFn$_invoke$arity$1(e) : on_change.call(null,e));\r\n});\r\nreagent.impl.template.input_render_setup = (function reagent$impl$template$input_render_setup(this$,jsprops){\r\nif(cljs.core.truth_((((!((jsprops == null))))?(function (){var and__4174__auto__ = jsprops.hasOwnProperty(\"onChange\");\r\nif(cljs.core.truth_(and__4174__auto__)){\r\nreturn jsprops.hasOwnProperty(\"value\");\r\n} else {\r\nreturn and__4174__auto__;\r\n}\r\n})():false))){\r\n\r\nvar v = (jsprops[\"value\"]);\r\nvar value = (((v == null))?\"\":v);\r\nvar on_change = (jsprops[\"onChange\"]);\r\nif(cljs.core.truth_((this$[\"cljsInputLive\"]))){\r\n} else {\r\n(this$[\"cljsInputLive\"] = true);\r\n\r\n(this$[\"cljsDOMValue\"] = value);\r\n}\r\n\r\n(this$[\"cljsRenderedValue\"] = value);\r\n\r\ndelete jsprops[\"value\"];\r\n\r\nvar G__54036 = jsprops;\r\n(G__54036[\"defaultValue\"] = value);\r\n\r\n(G__54036[\"onChange\"] = (function (p1__54034_SHARP_){\r\nreturn reagent.impl.template.input_handle_change(this$,on_change,p1__54034_SHARP_);\r\n}));\r\n\r\nreturn G__54036;\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nreagent.impl.template.input_unmount = (function reagent$impl$template$input_unmount(this$){\r\nreturn (this$[\"cljsInputLive\"] = null);\r\n});\r\nreagent.impl.template.input_component_QMARK_ = (function reagent$impl$template$input_component_QMARK_(x){\r\nvar G__54037 = x;\r\nswitch (G__54037) {\r\ncase \"input\":\r\ncase \"textarea\":\r\nreturn true;\r\n\r\nbreak;\r\ndefault:\r\nreturn false;\r\n\r\n}\r\n});\r\nreagent.impl.template.reagent_input_class = null;\r\nreagent.impl.template.input_spec = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"display-name\",\"display-name\",694513143),\"ReagentInput\",new cljs.core.Keyword(null,\"component-did-update\",\"component-did-update\",-1468549173),reagent.impl.template.input_component_set_value,new cljs.core.Keyword(null,\"component-will-unmount\",\"component-will-unmount\",-2058314698),reagent.impl.template.input_unmount,new cljs.core.Keyword(null,\"reagent-render\",\"reagent-render\",-985383853),(function (argv,comp,jsprops,first_child){\r\nvar this$ = reagent.impl.component._STAR_current_component_STAR_;\r\nreagent.impl.template.input_render_setup(this$,jsprops);\r\n\r\nreturn (reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4 ? reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4(argv,comp,jsprops,first_child) : reagent.impl.template.make_element.call(null,argv,comp,jsprops,first_child));\r\n})], null);\r\nreagent.impl.template.reagent_input = (function reagent$impl$template$reagent_input(){\r\nif((reagent.impl.template.reagent_input_class == null)){\r\n(reagent.impl.template.reagent_input_class = reagent.impl.component.create_class(reagent.impl.template.input_spec));\r\n} else {\r\n}\r\n\r\nreturn reagent.impl.template.reagent_input_class;\r\n});\r\nreagent.impl.template.parse_tag = (function reagent$impl$template$parse_tag(hiccup_tag){\r\nvar vec__54039 = cljs.core.next(cljs.core.re_matches(reagent.impl.template.re_tag,cljs.core.name(hiccup_tag)));\r\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__54039,(0),null);\r\nvar id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__54039,(1),null);\r\nvar class$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__54039,(2),null);\r\nvar class$__$1 = (((class$ == null))?null:clojure.string.replace(class$,/\\./,\" \"));\r\n\r\nreturn ({\"name\": tag, \"id\": id, \"class\": class$__$1, \"custom\": cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((-1),tag.indexOf(\"-\"))});\r\n});\r\nreagent.impl.template.try_get_key = (function reagent$impl$template$try_get_key(x){\r\ntry{return cljs.core.get.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\r\n}catch (e54045){var e = e54045;\r\nreturn null;\r\n}});\r\nreagent.impl.template.get_key = (function reagent$impl$template$get_key(x){\r\nif(cljs.core.map_QMARK_(x)){\r\nreturn reagent.impl.template.try_get_key(x);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nreagent.impl.template.key_from_vec = (function reagent$impl$template$key_from_vec(v){\r\nvar temp__5737__auto__ = reagent.impl.template.get_key(cljs.core.meta(v));\r\nif((temp__5737__auto__ == null)){\r\nreturn reagent.impl.template.get_key(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null));\r\n} else {\r\nvar k = temp__5737__auto__;\r\nreturn k;\r\n}\r\n});\r\nreagent.impl.template.reag_element = (function reagent$impl$template$reag_element(tag,v){\r\nvar c = reagent.impl.component.as_class(tag);\r\nvar jsprops = ({\"argv\": v});\r\nvar temp__5739__auto___54151 = reagent.impl.template.key_from_vec(v);\r\nif((temp__5739__auto___54151 == null)){\r\n} else {\r\nvar key_54152 = temp__5739__auto___54151;\r\n(jsprops[\"key\"] = key_54152);\r\n}\r\n\r\nreturn module$node_modules$react$index.createElement(c,jsprops);\r\n});\r\nreagent.impl.template.fragment_element = (function reagent$impl$template$fragment_element(argv){\r\nvar props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,(1),null);\r\nvar hasprops = (((props == null)) || (cljs.core.map_QMARK_(props)));\r\nvar jsprops = reagent.impl.template.convert_prop_value(((hasprops)?props:null));\r\nvar first_child = ((1) + ((hasprops)?(1):(0)));\r\nvar temp__5739__auto___54153 = reagent.impl.template.key_from_vec(argv);\r\nif((temp__5739__auto___54153 == null)){\r\n} else {\r\nvar key_54154 = temp__5739__auto___54153;\r\nreagent.impl.template.oset(jsprops,\"key\",key_54154);\r\n}\r\n\r\nreturn (reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4 ? reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4(argv,module$node_modules$react$index.Fragment,jsprops,first_child) : reagent.impl.template.make_element.call(null,argv,module$node_modules$react$index.Fragment,jsprops,first_child));\r\n});\r\nreagent.impl.template.adapt_react_class = (function reagent$impl$template$adapt_react_class(c){\r\nvar G__54049 = reagent.impl.template.__GT_NativeWrapper();\r\n(G__54049[\"name\"] = c);\r\n\r\n(G__54049[\"id\"] = null);\r\n\r\n(G__54049[\"class\"] = null);\r\n\r\nreturn G__54049;\r\n});\r\nreagent.impl.template.tag_name_cache = ({});\r\nreagent.impl.template.cached_parse = (function reagent$impl$template$cached_parse(x){\r\nvar temp__5737__auto__ = reagent.impl.template.cache_get(reagent.impl.template.tag_name_cache,x);\r\nif((temp__5737__auto__ == null)){\r\nreturn (reagent.impl.template.tag_name_cache[x] = reagent.impl.template.parse_tag(x));\r\n} else {\r\nvar s = temp__5737__auto__;\r\nreturn s;\r\n}\r\n});\r\nreagent.impl.template.native_element = (function reagent$impl$template$native_element(parsed,argv,first){\r\nvar comp = (parsed[\"name\"]);\r\nvar props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,first,null);\r\nvar hasprops = (((props == null)) || (cljs.core.map_QMARK_(props)));\r\nvar jsprops = reagent.impl.template.convert_props(((hasprops)?props:null),parsed);\r\nvar first_child = (first + ((hasprops)?(1):(0)));\r\nif(reagent.impl.template.input_component_QMARK_(comp)){\r\nvar G__54050 = cljs.core.with_meta(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [reagent.impl.template.reagent_input(),argv,comp,jsprops,first_child], null),cljs.core.meta(argv));\r\nreturn (reagent.impl.template.as_element.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.as_element.cljs$core$IFn$_invoke$arity$1(G__54050) : reagent.impl.template.as_element.call(null,G__54050));\r\n} else {\r\nvar key = reagent.impl.template.get_key(cljs.core.meta(argv));\r\nvar p = (((key == null))?jsprops:reagent.impl.template.oset(jsprops,\"key\",key));\r\nreturn (reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4 ? reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4(argv,comp,p,first_child) : reagent.impl.template.make_element.call(null,argv,comp,p,first_child));\r\n}\r\n});\r\nreagent.impl.template.str_coll = (function reagent$impl$template$str_coll(coll){\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll);\r\n\r\n});\r\nreagent.impl.template.hiccup_err = (function reagent$impl$template$hiccup_err(var_args){\r\nvar args__4795__auto__ = [];\r\nvar len__4789__auto___54159 = arguments.length;\r\nvar i__4790__auto___54160 = (0);\r\nwhile(true){\r\nif((i__4790__auto___54160 < len__4789__auto___54159)){\r\nargs__4795__auto__.push((arguments[i__4790__auto___54160]));\r\n\r\nvar G__54161 = (i__4790__auto___54160 + (1));\r\ni__4790__auto___54160 = G__54161;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4796__auto__ = ((((1) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((1)),(0),null)):null);\r\nreturn reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4796__auto__);\r\n});\r\n\r\n(reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic = (function (v,msg){\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,msg)),\": \",reagent.impl.template.str_coll(v),\"\\n\",reagent.impl.component.comp_name()].join('');\r\n}));\r\n\r\n(reagent.impl.template.hiccup_err.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(reagent.impl.template.hiccup_err.cljs$lang$applyTo = (function (seq54057){\r\nvar G__54058 = cljs.core.first(seq54057);\r\nvar seq54057__$1 = cljs.core.next(seq54057);\r\nvar self__4776__auto__ = this;\r\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__54058,seq54057__$1);\r\n}));\r\n\r\nreagent.impl.template.vec_to_elem = (function reagent$impl$template$vec_to_elem(v){\r\nwhile(true){\r\n\r\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(0),null);\r\n\r\nif(cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(null,\"<>\",\"<>\",1280186386),tag)){\r\nreturn reagent.impl.template.fragment_element(v);\r\n} else {\r\nif(reagent.impl.template.hiccup_tag_QMARK_(tag)){\r\nvar n = cljs.core.name(tag);\r\nvar pos = n.indexOf(\">\");\r\nvar G__54074 = pos;\r\nswitch (G__54074) {\r\ncase (-1):\r\nreturn reagent.impl.template.native_element(reagent.impl.template.cached_parse(n),v,(1));\r\n\r\nbreak;\r\ncase (0):\r\nvar comp = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null);\r\n\r\nreturn reagent.impl.template.native_element(({\"name\": comp}),v,(2));\r\n\r\nbreak;\r\ndefault:\r\nvar G__54163 = cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.cljs$core$IFn$_invoke$arity$3(n,(0),pos),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.with_meta(v,null),(0),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(n,(pos + (1))))], null),cljs.core.meta(v));\r\nv = G__54163;\r\ncontinue;\r\n\r\n}\r\n} else {\r\nif((tag instanceof reagent.impl.template.NativeWrapper)){\r\nreturn reagent.impl.template.native_element(tag,v,(1));\r\n} else {\r\nreturn reagent.impl.template.reag_element(tag,v);\r\n\r\n}\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\nreagent.impl.template.as_element = (function reagent$impl$template$as_element(x){\r\nif(reagent.impl.template.js_val_QMARK_(x)){\r\nreturn x;\r\n} else {\r\nif(cljs.core.vector_QMARK_(x)){\r\nreturn reagent.impl.template.vec_to_elem(x);\r\n} else {\r\nif(cljs.core.seq_QMARK_(x)){\r\nreturn (reagent.impl.template.expand_seq.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.expand_seq.cljs$core$IFn$_invoke$arity$1(x) : reagent.impl.template.expand_seq.call(null,x));\r\n\r\n} else {\r\nif(reagent.impl.template.named_QMARK_(x)){\r\nreturn cljs.core.name(x);\r\n} else {\r\nif((((!((x == null))))?(((((x.cljs$lang$protocol_mask$partition0$ & (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IPrintWithWriter$))))?true:(((!x.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,x):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,x))){\r\nreturn cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x], 0));\r\n} else {\r\nreturn x;\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\n(reagent.impl.component.as_element = reagent.impl.template.as_element);\r\nreagent.impl.template.expand_seq = (function reagent$impl$template$expand_seq(s){\r\nvar a = cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(s);\r\nvar n__4666__auto___54164 = a.length;\r\nvar i_54165 = (0);\r\nwhile(true){\r\nif((i_54165 < n__4666__auto___54164)){\r\n(a[i_54165] = reagent.impl.template.as_element((a[i_54165])));\r\n\r\nvar G__54166 = (i_54165 + (1));\r\ni_54165 = G__54166;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn a;\r\n});\r\nreagent.impl.template.expand_seq_dev = (function reagent$impl$template$expand_seq_dev(s,o){\r\nvar a = cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(s);\r\nvar n__4666__auto___54167 = a.length;\r\nvar i_54168 = (0);\r\nwhile(true){\r\nif((i_54168 < n__4666__auto___54167)){\r\nvar val_54169 = (a[i_54168]);\r\nif(((cljs.core.vector_QMARK_(val_54169)) && ((reagent.impl.template.key_from_vec(val_54169) == null)))){\r\n(o[\"no-key\"] = true);\r\n} else {\r\n}\r\n\r\n(a[i_54168] = reagent.impl.template.as_element(val_54169));\r\n\r\nvar G__54170 = (i_54168 + (1));\r\ni_54168 = G__54170;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nreturn a;\r\n});\r\nreagent.impl.template.expand_seq_check = (function reagent$impl$template$expand_seq_check(x){\r\nvar ctx = ({});\r\nvar vec__54095 = reagent.ratom.check_derefs((function (){\r\nreturn reagent.impl.template.expand_seq_dev(x,ctx);\r\n}));\r\nvar res = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__54095,(0),null);\r\nvar derefed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__54095,(1),null);\r\nif(cljs.core.truth_(derefed)){\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_((ctx[\"no-key\"]))){\r\n} else {\r\n}\r\n\r\nreturn res;\r\n});\r\nreagent.impl.template.make_element = (function reagent$impl$template$make_element(argv,comp,jsprops,first_child){\r\nvar G__54098 = (cljs.core.count(argv) - first_child);\r\nswitch (G__54098) {\r\ncase (0):\r\nreturn module$node_modules$react$index.createElement(comp,jsprops);\r\n\r\nbreak;\r\ncase (1):\r\nvar G__54099 = comp;\r\nvar G__54100 = jsprops;\r\nvar G__54101 = reagent.impl.template.as_element(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,first_child,null));\r\nreturn module$node_modules$react$index.createElement(G__54099,G__54100,G__54101);\r\n\r\nbreak;\r\ndefault:\r\nreturn module$node_modules$react$index.createElement.apply(null,cljs.core.reduce_kv((function (a,k,v){\r\nif((k >= first_child)){\r\na.push(reagent.impl.template.as_element(v));\r\n} else {\r\n}\r\n\r\nreturn a;\r\n}),[comp,jsprops],argv));\r\n\r\n}\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/impl/template.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",26],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$log","~$reagent.debug","~$warn-unless","^F","~$dbg","^F","~$$!","~$reagent.interop","~$prn","^F","~$warn","^F","~$dev?","^F","~$println","^F","~$$","^J"],"~:excludes",["~#set",[]],"~:name","~$reagent.impl.template","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^W","~$comp","~$reagent.impl.component","^J","^J","~$reagent.ratom","^Z","^>","^?","~$cljs.core","^[","^?","^?","~$goog","^10","~$reagent.impl.batching","^11","^Y","^Y","~$util","^W","~$ratom","^Z","~$string","~$clojure.string","~$batch","^11","^F","^F","^15","^15","~$clojure.walk","^17"],"~:seen",["^P",["~:require"]],"~:uses",["^ ","~$prewalk","^17","~$is-client","^W"],"~:require-macros",["^ ","^J","^J","^F","^F","^[","^[","^Z","^Z","^13","^Z"],"~:form",["~#list",["~$ns","^R",["^1?",["^19",["^>","~:as","^>"],["^15","^1A","^14"],["^17","~:refer",["^1;"]],["^W","^1A","^12","^1B",["^1<"]],["^Y","^1A","^X"],["^11","^1A","^16"],["^Z","^1A","^13"],["^J","~:refer-macros",["~$$","^I"]],["^F","^1C",["^H","^K","^N","^E","^M","^L","^G"]]]]]],"~:flags",["^ ","^19",["^P",[]]],"~:js-deps",["^ "],"~:deps",["^10","^[","^?","^15","^17","^W","^Y","^11","^Z","^J","^F"]],"^T","^R","~:resource-id",["~:shadow.build.classpath/resource","reagent/impl/template.cljs"],"~:compiled-at",1607248062176,"~:resource-name","reagent/impl/template.cljs","~:warnings",[],"~:source","(ns reagent.impl.template\n  (:require [react :as react]\n            [clojure.string :as string]\n            [clojure.walk :refer [prewalk]]\n            [reagent.impl.util :as util :refer [is-client]]\n            [reagent.impl.component :as comp]\n            [reagent.impl.batching :as batch]\n            [reagent.ratom :as ratom]\n            [reagent.interop :refer-macros [$ $!]]\n            [reagent.debug :refer-macros [dbg prn println log dev?\n                                          warn warn-unless]]))\n\n(declare as-element)\n\n;; From Weavejester's Hiccup, via pump:\n(def ^{:doc \"Regular expression that parses a CSS-style id and class\n             from a tag name.\"}\n  re-tag #\"([^\\s\\.#]+)(?:#([^\\s\\.#]+))?(?:\\.([^\\s#]+))?\")\n\n(deftype NativeWrapper [])\n\n\n;;; Common utilities\n\n(defn ^boolean named? [x]\n  (or (keyword? x)\n      (symbol? x)))\n\n(defn ^boolean hiccup-tag? [x]\n  (or (named? x)\n      (string? x)))\n\n(defn ^boolean valid-tag? [x]\n  (or (hiccup-tag? x)\n      (ifn? x)\n      (instance? NativeWrapper x)))\n\n\n;;; Props conversion\n\n(def prop-name-cache #js{:class \"className\"\n                         :for \"htmlFor\"\n                         :charset \"charSet\"})\n\n(defn cache-get [o k]\n  (when ^boolean (.hasOwnProperty o k)\n    (aget o k)))\n\n(defn cached-prop-name [k]\n  (if (named? k)\n    (if-some [k' (cache-get prop-name-cache (name k))]\n      k'\n      (aset prop-name-cache (name k)\n            (util/dash-to-camel k)))\n    k))\n\n(defn ^boolean js-val? [x]\n  (not (identical? \"object\" (goog/typeOf x))))\n\n(declare convert-prop-value)\n\n(defn kv-conv [o k v]\n  (doto o\n    (aset (cached-prop-name k)\n          (convert-prop-value v))))\n\n(defn convert-prop-value [x]\n  (cond (js-val? x) x\n        (named? x) (name x)\n        (map? x) (reduce-kv kv-conv #js{} x)\n        (coll? x) (clj->js x)\n        (ifn? x) (fn [& args]\n                   (apply x args))\n        :else (clj->js x)))\n\n;; Previous few functions copied for custom elements,\n;; without mapping from class to className etc.\n\n(def custom-prop-name-cache #js{})\n\n(defn cached-custom-prop-name [k]\n  (if (named? k)\n    (if-some [k' (cache-get custom-prop-name-cache (name k))]\n      k'\n      (aset custom-prop-name-cache (name k)\n            (util/dash-to-camel k)))\n    k))\n\n(defn custom-kv-conv [o k v]\n  (doto o\n    (aset (cached-custom-prop-name k)\n          (convert-prop-value v))))\n\n(defn convert-custom-prop-value [x]\n  (cond (js-val? x) x\n        (named? x) (name x)\n        (map? x) (reduce-kv custom-kv-conv #js{} x)\n        (coll? x) (clj->js x)\n        (ifn? x) (fn [& args]\n                   (apply x args))\n        :else (clj->js x)))\n\n(defn oset [o k v]\n  (doto (if (nil? o) #js{} o)\n    (aset k v)))\n\n(defn oget [o k]\n  (if (nil? o) nil (aget o k)))\n\n(defn set-id-class\n  \"Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties.\"\n  [props id-class]\n  (let [id ($ id-class :id)\n        class ($ id-class :class)]\n    (cond-> props\n      ;; Only use ID from tag keyword if no :id in props already\n      (and (some? id)\n           (nil? (:id props)))\n      (assoc :id id)\n\n      ;; Merge classes\n      class\n      (assoc :class (let [old-class (:class props)]\n                      (if (nil? old-class) class (str class \" \" (if (named? old-class)\n                                                                  (name old-class)\n                                                                  old-class))))))))\n\n(defn stringify-class [{:keys [class] :as props}]\n  (if (coll? class)\n    (->> class\n         (keep (fn [c]\n                 (if c\n                   (if (named? c)\n                     (name c)\n                     c))))\n         (string/join \" \")\n         (assoc props :class))\n    props))\n\n(defn convert-props [props id-class]\n  (let [props (-> props\n                  stringify-class\n                  (set-id-class id-class))]\n    (if ($ id-class :custom)\n      (convert-custom-prop-value props)\n      (convert-prop-value props))))\n\n;;; Specialization for input components\n\n;; This gets set from reagent.dom\n(defonce find-dom-node nil)\n\n;; <input type=\"??\" >\n;; The properites 'selectionStart' and 'selectionEnd' only exist on some inputs\n;; See: https://html.spec.whatwg.org/multipage/forms.html#do-not-apply\n(def these-inputs-have-selection-api #{\"text\" \"textarea\" \"password\" \"search\"\n                                       \"tel\" \"url\"})\n\n(defn ^boolean has-selection-api?\n  [input-type]\n  (contains? these-inputs-have-selection-api input-type))\n\n(declare input-component-set-value)\n\n(defn input-node-set-value\n  [node rendered-value dom-value component {:keys [on-write]}]\n  (if-not (and (identical? node ($ js/document :activeElement))\n            (has-selection-api? ($ node :type))\n            (string? rendered-value)\n            (string? dom-value))\n    ;; just set the value, no need to worry about a cursor\n    (do\n      ($! component :cljsDOMValue rendered-value)\n      ($! node :value rendered-value)\n      (when (fn? on-write)\n        (on-write rendered-value)))\n\n    ;; Setting \"value\" (below) moves the cursor position to the\n    ;; end which gives the user a jarring experience.\n    ;;\n    ;; But repositioning the cursor within the text, turns out to\n    ;; be quite a challenge because changes in the text can be\n    ;; triggered by various events like:\n    ;; - a validation function rejecting a user inputted char\n    ;; - the user enters a lower case char, but is transformed to\n    ;;   upper.\n    ;; - the user selects multiple chars and deletes text\n    ;; - the user pastes in multiple chars, and some of them are\n    ;;   rejected by a validator.\n    ;; - the user selects multiple chars and then types in a\n    ;;   single new char to repalce them all.\n    ;; Coming up with a sane cursor repositioning strategy hasn't\n    ;; been easy ALTHOUGH in the end, it kinda fell out nicely,\n    ;; and it appears to sanely handle all the cases we could\n    ;; think of.\n    ;; So this is just a warning. The code below is simple\n    ;; enough, but if you are tempted to change it, be aware of\n    ;; all the scenarios you have handle.\n    (let [node-value ($ node :value)]\n      (if (not= node-value dom-value)\n        ;; IE has not notified us of the change yet, so check again later\n        (batch/do-after-render #(input-component-set-value component))\n        (let [existing-offset-from-end (- (count node-value)\n                                         ($ node :selectionStart))\n              new-cursor-offset        (- (count rendered-value)\n                                         existing-offset-from-end)]\n          ($! component :cljsDOMValue rendered-value)\n          ($! node :value rendered-value)\n          (when (fn? on-write)\n            (on-write rendered-value))\n          ($! node :selectionStart new-cursor-offset)\n          ($! node :selectionEnd new-cursor-offset))))))\n\n(defn input-component-set-value [this]\n  (when ($ this :cljsInputLive)\n    ($! this :cljsInputDirty false)\n    (let [rendered-value ($ this :cljsRenderedValue)\n          dom-value ($ this :cljsDOMValue)\n          ;; Default to the root node within this component\n          node (find-dom-node this)]\n      (when (not= rendered-value dom-value)\n        (input-node-set-value node rendered-value dom-value this {})))))\n\n(defn input-handle-change [this on-change e]\n  ($! this :cljsDOMValue (-> e .-target .-value))\n  ;; Make sure the input is re-rendered, in case on-change\n  ;; wants to keep the value unchanged\n  (when-not ($ this :cljsInputDirty)\n    ($! this :cljsInputDirty true)\n    (batch/do-after-render #(input-component-set-value this)))\n  (on-change e))\n\n(defn input-render-setup\n  [this jsprops]\n  ;; Don't rely on React for updating \"controlled inputs\", since it\n  ;; doesn't play well with async rendering (misses keystrokes).\n  (when (and (some? jsprops)\n             (.hasOwnProperty jsprops \"onChange\")\n             (.hasOwnProperty jsprops \"value\"))\n    (assert find-dom-node\n            \"reagent.dom needs to be loaded for controlled input to work\")\n    (let [v ($ jsprops :value)\n          value (if (nil? v) \"\" v)\n          on-change ($ jsprops :onChange)]\n      (when-not ($ this :cljsInputLive)\n        ;; set initial value\n        ($! this :cljsInputLive true)\n        ($! this :cljsDOMValue value))\n      ($! this :cljsRenderedValue value)\n      (js-delete jsprops \"value\")\n      (doto jsprops\n        ($! :defaultValue value)\n        ($! :onChange #(input-handle-change this on-change %))))))\n\n(defn input-unmount [this]\n  ($! this :cljsInputLive nil))\n\n(defn ^boolean input-component? [x]\n  (case x\n    (\"input\" \"textarea\") true\n    false))\n\n(def reagent-input-class nil)\n\n(declare make-element)\n\n(def input-spec\n  {:display-name \"ReagentInput\"\n   :component-did-update input-component-set-value\n   :component-will-unmount input-unmount\n   :reagent-render\n   (fn [argv comp jsprops first-child]\n     (let [this comp/*current-component*]\n       (input-render-setup this jsprops)\n       (make-element argv comp jsprops first-child)))})\n\n(defn reagent-input\n  []\n  (when (nil? reagent-input-class)\n    (set! reagent-input-class (comp/create-class input-spec)))\n  reagent-input-class)\n\n\n;;; Conversion from Hiccup forms\n\n(defn parse-tag [hiccup-tag]\n  (let [[tag id class] (->> hiccup-tag name (re-matches re-tag) next)\n        class (when-not (nil? class)\n                (string/replace class #\"\\.\" \" \"))]\n    (assert tag (str \"Invalid tag: '\" hiccup-tag \"'\"\n                     (comp/comp-name)))\n    #js {:name tag\n         :id id\n         :class class\n         ;; Custom element names must contain hyphen\n         ;; https://www.w3.org/TR/custom-elements/#custom-elements-core-concepts\n         :custom (not= -1 (.indexOf tag \"-\"))}))\n\n(defn try-get-key [x]\n  ;; try catch to avoid clojurescript peculiarity with\n  ;; sorted-maps with keys that are numbers\n  (try (get x :key)\n       (catch :default e)))\n\n(defn get-key [x]\n  (when (map? x)\n    (try-get-key x)))\n\n(defn key-from-vec [v]\n  (if-some [k (-> (meta v) get-key)]\n    k\n    (-> v (nth 1 nil) get-key)))\n\n(defn reag-element [tag v]\n  (let [c (comp/as-class tag)\n        jsprops #js{:argv v}]\n    (when-some [key (key-from-vec v)]\n      ($! jsprops :key key))\n    (react/createElement c jsprops)))\n\n(defn fragment-element [argv]\n  (let [props (nth argv 1 nil)\n        hasprops (or (nil? props) (map? props))\n        jsprops (convert-prop-value (if hasprops props))\n        first-child (+ 1 (if hasprops 1 0))]\n    (when-some [key (key-from-vec argv)]\n      (oset jsprops \"key\" key))\n    (make-element argv react/Fragment jsprops first-child)))\n\n(defn adapt-react-class\n  [c]\n  (doto (->NativeWrapper)\n    ($! :name c)\n    ($! :id nil)\n    ($! :class nil)))\n\n(def tag-name-cache #js{})\n\n(defn cached-parse [x]\n  (if-some [s (cache-get tag-name-cache x)]\n    s\n    (aset tag-name-cache x (parse-tag x))))\n\n(defn native-element [parsed argv first]\n  (let [comp ($ parsed :name)]\n    (let [props (nth argv first nil)\n          hasprops (or (nil? props) (map? props))\n          jsprops (convert-props (if hasprops props) parsed)\n          first-child (+ first (if hasprops 1 0))]\n      (if (input-component? comp)\n        (-> [(reagent-input) argv comp jsprops first-child]\n            (with-meta (meta argv))\n            as-element)\n        (let [key (-> (meta argv) get-key)\n              p (if (nil? key)\n                  jsprops\n                  (oset jsprops \"key\" key))]\n          (make-element argv comp p first-child))))))\n\n(defn str-coll [coll]\n  (if (dev?)\n    (str (prewalk (fn [x]\n                    (if (fn? x)\n                      (let [n (util/fun-name x)]\n                        (case n \"\" x (symbol n)))\n                      x)) coll))\n    (str coll)))\n\n(defn hiccup-err [v & msg]\n  (str (apply str msg) \": \" (str-coll v) \"\\n\" (comp/comp-name)))\n\n(defn vec-to-elem [v]\n  (assert (pos? (count v)) (hiccup-err v \"Hiccup form should not be empty\"))\n  (let [tag (nth v 0 nil)]\n    (assert (valid-tag? tag) (hiccup-err v \"Invalid Hiccup form\"))\n    (cond\n      (keyword-identical? :<> tag)\n      (fragment-element v)\n\n      (hiccup-tag? tag)\n      (let [n (name tag)\n            pos (.indexOf n \">\")]\n        (case pos\n          -1 (native-element (cached-parse n) v 1)\n          ;; TODO: Doesn't this match :>foo or any keyword starting with >\n          0 (let [comp (nth v 1 nil)]\n              ;; Support [:> comp ...]\n              (assert (= \">\" n) (hiccup-err v \"Invalid Hiccup tag\"))\n              (native-element #js{:name comp} v 2))\n          ;; Support extended hiccup syntax, i.e :div.bar>a.foo\n          ;; Apply metadata (e.g. :key) to the outermost element.\n          ;; Metadata is probably used only with sequeneces, and in that case\n          ;; only the key of the outermost element matters.\n          (recur (with-meta [(subs n 0 pos)\n                             (assoc (with-meta v nil) 0 (subs n (inc pos)))]\n                            (meta v)))))\n\n      (instance? NativeWrapper tag)\n      (native-element tag v 1)\n\n      :else (reag-element tag v))))\n\n(declare expand-seq)\n(declare expand-seq-check)\n\n(defn as-element [x]\n  (cond (js-val? x) x\n        (vector? x) (vec-to-elem x)\n        (seq? x) (if (dev?)\n                   (expand-seq-check x)\n                   (expand-seq x))\n        (named? x) (name x)\n        (satisfies? IPrintWithWriter x) (pr-str x)\n        :else x))\n\n(set! comp/as-element as-element)\n\n(defn expand-seq [s]\n  (let [a (into-array s)]\n    (dotimes [i (alength a)]\n      (aset a i (as-element (aget a i))))\n    a))\n\n(defn expand-seq-dev [s o]\n  (let [a (into-array s)]\n    (dotimes [i (alength a)]\n      (let [val (aget a i)]\n        (when (and (vector? val)\n                   (nil? (key-from-vec val)))\n          ($! o :no-key true))\n        (aset a i (as-element val))))\n    a))\n\n(defn expand-seq-check [x]\n  (let [ctx #js{}\n        [res derefed] (ratom/check-derefs #(expand-seq-dev x ctx))]\n    (when derefed\n      (warn (hiccup-err x \"Reactive deref not supported in lazy seq, \"\n                        \"it should be wrapped in doall\")))\n    (when ($ ctx :no-key)\n      (warn (hiccup-err x \"Every element in a seq should have a unique :key\")))\n    res))\n\n;; From https://github.com/babel/babel/commit/1d0e68f5a19d721fe8799b1ea331041d8bf9120e\n;; (def react-element-type (or (and (exists? js/Symbol)\n;;                                  ($ js/Symbol :for)\n;;                                  ($ js/Symbol for \"react.element\"))\n;;                             60103))\n\n;; (defn make-element-fast [argv comp jsprops first-child]\n;;   (let [key (some-> jsprops ($ :key))\n;;         ref (some-> jsprops ($ :ref))\n;;         props (if (nil? jsprops) (js-obj) jsprops)]\n;;     ($! props :children\n;;         (case (- (count argv) first-child)\n;;           0 nil\n;;           1 (as-element (nth argv first-child))\n;;           (reduce-kv (fn [a k v]\n;;                        (when (>= k first-child)\n;;                          (.push a (as-element v)))\n;;                        a)\n;;                      #js[] argv)))\n;;     (js-obj \"key\" key\n;;             \"ref\" ref\n;;             \"props\" props\n;;             \"$$typeof\" react-element-type\n;;             \"type\" comp\n;;             ;; \"_store\" (js-obj)\n;;             )))\n\n(defn make-element [argv comp jsprops first-child]\n  (case (- (count argv) first-child)\n    ;; Optimize cases of zero or one child\n    0 (react/createElement comp jsprops)\n\n    1 (react/createElement comp jsprops\n          (as-element (nth argv first-child nil)))\n\n    (.apply react/createElement nil\n            (reduce-kv (fn [a k v]\n                         (when (>= k first-child)\n                           (.push a (as-element v)))\n                         a)\n                       #js[comp jsprops] argv))))\n","~:reader-features",["^P",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["reagent.impl.template/re-tag","this__4428__auto__","writer__4429__auto__","opt__4430__auto__","cljs.core/-write","reagent.impl.template/NativeWrapper","reagent.impl.template/->NativeWrapper","reagent.impl.template/named?","x","cljs.core/Keyword","cljs.core/Symbol","reagent.impl.template/hiccup-tag?","reagent.impl.template/valid-tag?","cljs.core/ifn?","reagent.impl.template/prop-name-cache","reagent.impl.template/cache-get","o","k","reagent.impl.template/cached-prop-name","temp__5737__auto__","k'","cljs.core/name","reagent.impl.util/dash-to-camel","reagent.impl.template/js-val?","goog/typeOf","reagent.impl.template/kv-conv","v","G__54002","reagent.impl.template/convert-prop-value","cljs.core/map?","cljs.core/reduce-kv","cljs.core/coll?","cljs.core/clj->js","args","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","reagent.impl.template/custom-prop-name-cache","reagent.impl.template/cached-custom-prop-name","reagent.impl.template/custom-kv-conv","G__54019","reagent.impl.template/convert-custom-prop-value","reagent.impl.template/oset","G__54020","reagent.impl.template/oget","reagent.impl.template/set-id-class","props","id-class","id","class","G__54021","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","old-class","p__54025","map__54026","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","reagent.impl.template/stringify-class","cljs.core.keep.cljs$core$IFn$_invoke$arity$2","c","clojure.string.join.cljs$core$IFn$_invoke$arity$2","reagent.impl.template/convert-props","js/reagent","js/reagent.impl","js/reagent.impl.template","js/reagent.impl.template.find-dom-node","reagent.impl.template/find-dom-node","reagent.impl.template/these-inputs-have-selection-api","reagent.impl.template/has-selection-api?","input-type","cljs.core/contains?","p__54029","map__54030","reagent.impl.template/input-node-set-value","node","rendered-value","dom-value","component","on-write","js/document","cljs.core/fn?","node-value","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","reagent.impl.batching/do-after-render","reagent.impl.template/input-component-set-value","existing-offset-from-end","cljs.core/count","new-cursor-offset","this","reagent.impl.template/input-handle-change","on-change","e","reagent.impl.template/input-render-setup","jsprops","and__4174__auto__","value","G__54036","p1__54034#","reagent.impl.template/input-unmount","reagent.impl.template/input-component?","G__54037","reagent.impl.template/reagent-input-class","reagent.impl.template/input-spec","argv","comp","first-child","reagent.impl.component/*current-component*","reagent.impl.template/make-element","reagent.impl.template/reagent-input","reagent.impl.component/create-class","reagent.impl.template/parse-tag","hiccup-tag","vec__54039","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","tag","cljs.core/re-matches","cljs.core/next","clojure.string/replace","reagent.impl.template/try-get-key","e54045","reagent.impl.template/get-key","reagent.impl.template/key-from-vec","cljs.core/meta","reagent.impl.template/reag-element","reagent.impl.component/as-class","temp__5739__auto__","key","js/module$node_modules$react$index.createElement","reagent.impl.template/fragment-element","hasprops","js/module$node_modules$react$index.Fragment","reagent.impl.template/adapt-react-class","G__54049","reagent.impl.template/tag-name-cache","reagent.impl.template/cached-parse","s","reagent.impl.template/native-element","parsed","first","G__54050","cljs.core/with-meta","reagent.impl.template/as-element","p","reagent.impl.template/str-coll","coll","var_args","args__4795__auto__","len__4789__auto__","i__4790__auto__","argseq__4796__auto__","cljs.core/IndexedSeq","reagent.impl.template/hiccup-err","seq54057","G__54058","cljs.core/first","self__4776__auto__","msg","cljs.core/str","reagent.impl.component/comp-name","reagent.impl.template/vec-to-elem","cljs.core/keyword-identical?","n","pos","G__54074","cljs.core.subs.cljs$core$IFn$_invoke$arity$3","cljs.core.subs.cljs$core$IFn$_invoke$arity$2","cljs.core/vector?","cljs.core/seq?","reagent.impl.template/expand-seq","cljs.core/native-satisfies?","cljs.core/IPrintWithWriter","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","reagent.impl.component/as-element","a","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1","n__4666__auto__","i","reagent.impl.template/expand-seq-dev","val","reagent.impl.template/expand-seq-check","vec__54095","ctx","res","derefed","reagent.ratom/check-derefs","G__54098","G__54099","G__54100","G__54101"]]],"~:cache-keys",["~#cmap",[["^1H","reagent/impl/batching.cljs"],[1604233666991,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^P",[]],"~:deps-syms",["^10","^[","^F","^J","^W","^15"]]],["^1H","goog/dom/tagname.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","~$goog.dom.HtmlElement"]]],["^1H","goog/math/math.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","~$goog.array","~$goog.asserts"]]],["^1H","goog/html/trustedtypes.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10"]]],["^1H","goog/labs/useragent/browser.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^1Z","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1H","goog/html/safeurl.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^1[","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^22"]]],["^1H","goog/array/array.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^1["]]],["~:shadow.build.npm/resource","node_modules/prop-types/checkPropTypes.js"],[1604233907000,1604233907000,1549836454000,"^1U",["^ ","^1V",3,"^1W",["^P",[2]],"^1X",["~$shadow.js","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1H","reagent/impl/util.cljs"],[1604233666991,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^[","^F","^J","^15"]]],["^29","node_modules/fbjs/lib/emptyFunction.js"],[1604233907000,1604233907000,1528785402000,"^1U",["^ ","^1V",8,"^1W",["^P",[]],"^1X",["^2:"]]],["^1H","goog/debug/error.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10"]]],["^29","node_modules/fbjs/lib/emptyObject.js"],[1604233907000,1604233907000,1528785402000,"^1U",["^ ","^1V",6,"^1W",["^P",[]],"^1X",["^2:"]]],["^1H","goog/dom/nodetype.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10"]]],["^1H","reagent/ratom.cljs"],[1604233666991,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^[","^W","^F","^11","~$clojure.set"]]],["^1H","goog/string/typedstring.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10"]]],["^29","node_modules/create-react-class/factory.js"],[1604233907000,1604233907000,1517346959000,"^1U",["^ ","^1V",10,"^1W",["^P",[0,7,6,9]],"^1X",["^2:","~$module$node_modules$object_assign$index","~$module$node_modules$fbjs$lib$emptyObject","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$fbjs$lib$warning"]]],["^29","node_modules/react/index.js"],[1604233907000,1604233907000,499162500000,"^1U",["^ ","^1V",5,"^1W",["^P",[1,4]],"^1X",["^2:","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1H","shadow/js.js"],[1604233907360,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10"]]],["^1H","goog/object/object.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10"]]],["^1H","reagent/impl/template.cljs"],[1604233666991,"^1U",["^ ","^1V",null,"^1W",["^P",[5]],"^1X",["^10","^[","^?","^15","^17","^W","^Y","^11","^Z","^J","^F"]]],["^1H","goog/dom/asserts.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^1["]]],"~:SHADOW-TIMESTAMP",[1604233907000,1604233898000],["^29","node_modules/react/cjs/react.development.js"],[1604233907000,1604233907000,499162500000,"^1U",["^ ","^1V",4,"^1W",["^P",[0,3]],"^1X",["^2:","^2=","~$module$node_modules$prop_types$checkPropTypes"]]],["^1H","goog/math/long.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^1[","~$goog.reflect"]]],["^1H","goog/html/trustedresourceurl.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^1[","~$goog.html.trustedtypes","^25","^26","^27","^28"]]],["^1H","goog/string/internal.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10"]]],["^29","node_modules/fbjs/lib/warning.js"],[1604233907000,1604233907000,1528785401000,"^1U",["^ ","^1V",9,"^1W",["^P",[8]],"^1X",["^2:","~$module$node_modules$fbjs$lib$emptyFunction"]]],["^1H","goog/functions/functions.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10"]]],["^1H","goog/html/safestyle.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^1Z","^1[","~$goog.html.SafeUrl","^27","^28","^22"]]],["^1H","goog/dom/safe.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^1[","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2H","^24","~$goog.html.uncheckedconversions","^27","^22"]]],["^1H","reagent/impl/component.cljs"],[1604233666991,"^1U",["^ ","^1V",null,"^1W",["^P",[11,5]],"^1X",["^10","^[","^A","^?","^W","^11","^Z","^J","^F"]]],["^1H","clojure/walk.cljs"],[1604233898486,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^["]]],["^1H","goog/structs/map.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1H","goog/html/safehtml.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^1Z","^1[","~$goog.dom.TagName","~$goog.dom.tags","^2L","^2M","~$goog.html.SafeStyleSheet","^2H","^24","^2F","^25","^26","~$goog.labs.userAgent.browser","^21","^27","^28","^22"]]],["^1H","goog/dom/tags.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^21"]]],["^1H","goog/asserts/asserts.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1H","goog/uri/uri.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^1Z","^1[","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1H","goog/i18n/bidi.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10"]]],["^29","node_modules/object-assign/index.js"],[1604233907000,1604233907000,1484580833000,"^1U",["^ ","^1V",0,"^1W",["^P",[]],"^1X",["^2:"]]],["^1H","goog/fs/url.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10"]]],["^1H","goog/base.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",[]]],["^1H","goog/structs/structs.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^1Z","^21"]]],["^1H","clojure/string.cljs"],[1604233898486,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^[","^2W","~$goog.string.StringBuffer"]]],["^29","node_modules/create-react-class/index.js"],[1604233907000,1604233907000,1517346956000,"^1U",["^ ","^1V",11,"^1W",["^P",[5,10]],"^1X",["^2:","^?","~$module$node_modules$create_react_class$factory"]]],["^29","node_modules/react/cjs/react.production.min.js"],[1604233907000,1604233907000,499162500000,"^1U",["^ ","^1V",1,"^1W",["^P",[0]],"^1X",["^2:","^2="]]],["^1H","goog/string/string.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","~$goog.dom.safe","^2N","^27","^22"]]],["^1H","goog/reflect/reflect.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10"]]],["^1H","goog/labs/useragent/util.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^22"]]],["^1H","goog/string/stringbuffer.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10"]]],["^1H","goog/iter/iter.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^1Z","^1[","^2J","~$goog.math"]]],["^1H","goog/html/uncheckedconversions.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^1[","^2K","^2L","^2M","^2S","^2H","^24","^27","^22"]]],["^29","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1604233907000,1604233907000,1549571078000,"^1U",["^ ","^1V",2,"^1W",["^P",[]],"^1X",["^2:"]]],["^1H","reagent/interop.cljs"],[1604233666991,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^["]]],["^1H","goog/dom/htmlelement.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10"]]],["^1H","cljs/core.cljs"],[1604233898486,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["~$goog.math.Long","~$goog.math.Integer","^2W","^21","^1Z","~$goog.Uri","^31"]]],["^1H","goog/html/safescript.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^1[","^2F","^27","^28"]]],["^1H","reagent/debug.cljs"],[1604233666991,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^["]]],["^1H","goog/html/safestylesheet.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^1Z","^1[","^2M","^21","^27","^28","^22"]]],["^1H","goog/math/integer.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^2E"]]],["^1H","clojure/set.cljs"],[1604233898486,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^["]]],["^1H","goog/uri/utils.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^1Z","^1[","^2W"]]],["^1H","goog/string/const.js"],[1604233662695,"^1U",["^ ","^1V",null,"^1W",["^P",[]],"^1X",["^10","^1[","^28"]]],["^29","node_modules/fbjs/lib/invariant.js"],[1604233907000,1604233907000,1528785400000,"^1U",["^ ","^1V",7,"^1W",["^P",[]],"^1X",["^2:"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1591214217000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/compiler.cljc",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env.cljc",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/tagged_literals.cljc",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/js_deps.cljc",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1591214217000,"jar:file:/C:/Users/admin/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/interop.clj",1604233666000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1591214217000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1591726260000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1591214217000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1591726260000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1591214217000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64.clj",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1591732625000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/externs.clj",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/ratom.clj",1604233666000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1591214217000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1591726260000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/util.cljc",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1591726260000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/core.cljc",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1591214217000,"jar:file:/C:/Users/admin/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/debug.clj",1604233666000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer.cljc",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64_vlq.clj",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map.clj",1604233898000,"jar:file:/C:/Users/admin/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1591726260000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/impl/template.cljs","^7",1,"^8",5,"^9",1,"^:",26],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",["^ ","^E","^F","^G","^F","^H","^F","^I","^J","^K","^F","^L","^F","^M","^F","^N","^F","~$$","^J"],"^O",["^P",[]],"~:shadow/js-access-properties",["^P",["createElement","Fragment"]],"^Q","^R","^U",null,"^V",["^ ","^W","^W","^X","^Y","^J","^J","^Z","^Z","^>","^?","^[","^[","^?","^?","^10","^10","^11","^11","^Y","^Y","^12","^W","^13","^Z","^14","^15","^16","^11","^F","^F","^15","^15","^17","^17"],"^18",["^P",["^19"]],"~:shadow/js-access-global",["^P",["document"]],"^1:",["^ ","^1;","^17","^1<","^W"],"~:defs",["^ ","~$valid-tag?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",33,"^8",16,"^9",33,"^:",26,"~:tag","~$boolean","~:arglists",["^1?",["~$quote",["^1?",[["~$x"]]]]]],"^Q","~$reagent.impl.template/valid-tag?","^6","reagent/impl/template.cljs","^:",26,"~:method-params",["^1?",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^1?",[null,null]],"^8",1,"~:variadic?",false,"^7",33,"~:ret-tag","^3[","^9",33,"~:max-fixed-arity",1,"^3Z","^3[","~:fn-var",true,"^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"~$adapt-react-class",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",331,"^8",7,"^9",331,"^:",24,"^40",["^1?",["^41",["^1?",[["~$c"]]]]]],"^Q","~$reagent.impl.template/adapt-react-class","^6","reagent/impl/template.cljs","^:",24,"^43",["^1?",[["~$c"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",331,"^47","~$reagent.impl.template/NativeWrapper","^9",331,"^48",1,"^49",true,"^40",["^1?",["^41",["^1?",[["~$c"]]]]]],"~$has-selection-api?",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",160,"^8",16,"^9",160,"^:",34,"^3Z","^3[","^40",["^1?",["^41",["^1?",[["~$input-type"]]]]]],"^Q","~$reagent.impl.template/has-selection-api?","^6","reagent/impl/template.cljs","^:",34,"^43",["^1?",[["^4>"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",160,"^47","^3[","^9",160,"^48",1,"^3Z","^3[","^49",true,"^40",["^1?",["^41",["^1?",[["^4>"]]]]]],"~$str-coll",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",361,"^8",7,"^9",361,"^:",15,"^40",["^1?",["^41",["^1?",[["~$coll"]]]]]],"^Q","~$reagent.impl.template/str-coll","^6","reagent/impl/template.cljs","^:",15,"^43",["^1?",[["^4A"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",361,"^47","^14","^9",361,"^48",1,"^49",true,"^40",["^1?",["^41",["^1?",[["^4A"]]]]]],"~$get-key",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",306,"^8",7,"^9",306,"^:",14,"^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"^Q","~$reagent.impl.template/get-key","^6","reagent/impl/template.cljs","^:",14,"^43",["^1?",[["~$x"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",306,"^47",["^P",["~$any","~$clj-nil"]],"^9",306,"^48",1,"^49",true,"^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"~$re-tag",["^ ","^5",["^ ","^6","reagent/impl/template.cljs","^7",18,"^8",3,"^9",18,"^:",9,"~:doc","Regular expression that parses a CSS-style id and class\n             from a tag name."],"^Q","~$reagent.impl.template/re-tag","^6","reagent/impl/template.cljs","^:",9,"^8",1,"^7",16,"^9",18,"^3Z","^4E","^4H","Regular expression that parses a CSS-style id and class\n             from a tag name."],"~$reag-element",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",315,"^8",7,"^9",315,"^:",19,"^40",["^1?",["^41",["^1?",[["~$tag","~$v"]]]]]],"^Q","~$reagent.impl.template/reag-element","^6","reagent/impl/template.cljs","^:",19,"^43",["^1?",[["^4K","~$v"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",315,"^47","~$js","^9",315,"^48",2,"^49",true,"^40",["^1?",["^41",["^1?",[["^4K","~$v"]]]]]],"~$as-element",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",407,"^8",7,"^9",407,"^:",17,"^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"^Q","~$reagent.impl.template/as-element","^6","reagent/impl/template.cljs","^:",17,"^43",["^1?",[["~$x"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",407,"^47",["^P",[null,"^4E","^4M","^14"]],"^9",407,"^48",1,"^49",true,"^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"~$input-component?",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",259,"^8",16,"^9",259,"^:",32,"^3Z","^3[","^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"^Q","~$reagent.impl.template/input-component?","^6","reagent/impl/template.cljs","^:",32,"^43",["^1?",[["~$x"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",259,"^47","^3[","^9",259,"^48",1,"^3Z","^3[","^49",true,"^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"~$NativeWrapper",["^ ","~:num-fields",0,"~:protocols",["^P",[]],"^Q","^4<","^6","reagent/impl/template.cljs","^:",23,"~:type",true,"^8",10,"^7",20,"~:record",false,"^9",20,"^3Z","~$function","~:skip-protocol-flag",null],"~$->NativeWrapper",["^ ","^3Y",null,"^5",["^ ","^4T",["^P",[]],"^6","reagent/impl/template.cljs","^:",23,"^8",10,"~:factory","~:positional","^7",20,"^9",20,"^40",["^1?",["^41",["^1?",[[]]]]],"^4X",null,"^4H","Positional factory function for reagent.impl.template/NativeWrapper."],"^4T",["^P",[]],"^Q","~$reagent.impl.template/->NativeWrapper","^6","reagent/impl/template.cljs","^:",23,"^43",["^1?",[[]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^4Z","^4[","^7",20,"^47","^4<","^9",20,"^48",0,"^49",true,"^40",["^1?",["^41",["^1?",[[]]]]],"^4X",null,"^4H","Positional factory function for reagent.impl.template/NativeWrapper."],"~$custom-kv-conv",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",89,"^8",7,"^9",89,"^:",21,"^40",["^1?",["^41",["^1?",[["~$o","~$k","~$v"]]]]]],"^Q","~$reagent.impl.template/custom-kv-conv","^6","reagent/impl/template.cljs","^:",21,"^43",["^1?",[["~$o","~$k","~$v"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",89,"^9",89,"^48",3,"^49",true,"^40",["^1?",["^41",["^1?",[["~$o","~$k","~$v"]]]]]],"~$input-render-setup",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",234,"^8",7,"^9",234,"^:",25,"^40",["^1?",["^41",["^1?",[["~$this","~$jsprops"]]]]]],"^Q","~$reagent.impl.template/input-render-setup","^6","reagent/impl/template.cljs","^:",25,"^43",["^1?",[["^54","^55"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",234,"^47",["^P",[null,"^4F"]],"^9",234,"^48",2,"^49",true,"^40",["^1?",["^41",["^1?",[["^54","^55"]]]]]],"~$input-component-set-value",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",215,"^8",7,"^9",215,"^:",32,"^40",["^1?",["^41",["^1?",[["^54"]]]]]],"^Q","~$reagent.impl.template/input-component-set-value","^6","reagent/impl/template.cljs","^:",32,"^43",["^1?",[["^54"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",215,"^47",["^P",["^4E","^4F"]],"^9",215,"^48",1,"^49",true,"^40",["^1?",["^41",["^1?",[["^54"]]]]]],"~$stringify-class",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",129,"^8",7,"^9",129,"^:",22,"^40",["^1?",["^41",["^1?",[[["^ ","~:keys",["~$class"],"^1A","~$props"]]]]]]],"^Q","~$reagent.impl.template/stringify-class","^6","reagent/impl/template.cljs","^:",22,"^43",["^1?",[["~$p__54025"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",129,"^47",["^P",[null,"~$clj","^4E"]],"^9",129,"^48",1,"^49",true,"^40",["^1?",["^41",["^1?",[[["^ ","^5:",["^5;"],"^1A","^5<"]]]]]]],"~$oset",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",103,"^8",7,"^9",103,"^:",11,"^40",["^1?",["^41",["^1?",[["~$o","~$k","~$v"]]]]]],"^Q","~$reagent.impl.template/oset","^6","reagent/impl/template.cljs","^:",11,"^43",["^1?",[["~$o","~$k","~$v"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",103,"^47",["^P",[null,"~$object"]],"^9",103,"^48",3,"^49",true,"^40",["^1?",["^41",["^1?",[["~$o","~$k","~$v"]]]]]],"~$oget",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",107,"^8",7,"^9",107,"^:",11,"^40",["^1?",["^41",["^1?",[["~$o","~$k"]]]]]],"^Q","~$reagent.impl.template/oget","^6","reagent/impl/template.cljs","^:",11,"^43",["^1?",[["~$o","~$k"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",107,"^47",["^P",["^4E","^4F"]],"^9",107,"^48",2,"^49",true,"^40",["^1?",["^41",["^1?",[["~$o","~$k"]]]]]],"~$hiccup-tag?",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",29,"^8",16,"^9",29,"^:",27,"^3Z","^3[","^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"^Q","~$reagent.impl.template/hiccup-tag?","^6","reagent/impl/template.cljs","^:",27,"^43",["^1?",[["~$x"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",29,"^47","^3[","^9",29,"^48",1,"^3Z","^3[","^49",true,"^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"~$set-id-class",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",110,"^8",7,"^9",110,"^:",19,"^40",["^1?",["^41",["^1?",[["^5<","~$id-class"]]]]],"^4H","Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties."],"^Q","~$reagent.impl.template/set-id-class","^6","reagent/impl/template.cljs","^:",19,"^43",["^1?",[["^5<","^5H"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",110,"^47",["^P",[null,"^5?","^4E"]],"^9",110,"^48",2,"^49",true,"^40",["^1?",["^41",["^1?",[["^5<","^5H"]]]]],"^4H","Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties."],"~$tag-name-cache",["^ ","^Q","~$reagent.impl.template/tag-name-cache","^6","reagent/impl/template.cljs","^7",338,"^8",1,"^9",338,"^:",20,"^5",["^ ","^6","reagent/impl/template.cljs","^7",338,"^8",6,"^9",338,"^:",20],"^3Z","^5B"],"~$prop-name-cache",["^ ","^Q","~$reagent.impl.template/prop-name-cache","^6","reagent/impl/template.cljs","^7",41,"^8",1,"^9",41,"^:",21,"^5",["^ ","^6","reagent/impl/template.cljs","^7",41,"^8",6,"^9",41,"^:",21],"^3Z","^5B"],"~$input-node-set-value",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",166,"^8",7,"^9",166,"^:",27,"^40",["^1?",["^41",["^1?",[["~$node","~$rendered-value","~$dom-value","~$component",["^ ","^5:",["~$on-write"]]]]]]]],"^Q","~$reagent.impl.template/input-node-set-value","^6","reagent/impl/template.cljs","^:",27,"^43",["^1?",[["^5O","^5P","^5Q","^5R","~$p__54029"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",166,"^47",["^P",["^4E","^4F"]],"^9",166,"^48",5,"^49",true,"^40",["^1?",["^41",["^1?",[["^5O","^5P","^5Q","^5R",["^ ","^5:",["^5S"]]]]]]]],"~$convert-props",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",141,"^8",7,"^9",141,"^:",20,"^40",["^1?",["^41",["^1?",[["^5<","^5H"]]]]]],"^Q","~$reagent.impl.template/convert-props","^6","reagent/impl/template.cljs","^:",20,"^43",["^1?",[["^5<","^5H"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",141,"^47",["^P",[null,"^4E","^14","^4W"]],"^9",141,"^48",2,"^49",true,"^40",["^1?",["^41",["^1?",[["^5<","^5H"]]]]]],"~$hiccup-err",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",370,"^8",7,"^9",370,"^:",17,"^40",["^1?",["^41",["^1?",[["~$v","~$&","~$msg"]]]]],"~:top-fn",["^ ","^46",true,"~:fixed-arity",1,"^48",1,"^43",[["^1?",["~$v","^5Y"]]],"^40",["^1?",[["~$v","~$&","^5Y"]]],"^45",["^1?",[null]]]],"^Q","~$reagent.impl.template/hiccup-err","^6","reagent/impl/template.cljs","^:",17,"^5Z",["^ ","^46",true,"^5[",1,"^48",1,"^43",[["^1?",["~$v","^5Y"]]],"^40",["^1?",[["~$v","~$&","^5Y"]]],"^45",["^1?",[null]]],"^43",[["^1?",["~$v","^5Y"]]],"^44",null,"^5[",1,"^45",["^1?",[null]],"^8",1,"^46",true,"~:methods",[["^ ","^5[",1,"^46",true,"^3Z","^14"]],"^7",370,"^47","^4E","^9",370,"^48",1,"^49",true,"^40",["^1?",[["~$v","~$&","^5Y"]]]],"~$custom-prop-name-cache",["^ ","^Q","~$reagent.impl.template/custom-prop-name-cache","^6","reagent/impl/template.cljs","^7",79,"^8",1,"^9",79,"^:",28,"^5",["^ ","^6","reagent/impl/template.cljs","^7",79,"^8",6,"^9",79,"^:",28],"^3Z","^5B"],"~$named?",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",25,"^8",16,"^9",25,"^:",22,"^3Z","^3[","^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"^Q","~$reagent.impl.template/named?","^6","reagent/impl/template.cljs","^:",22,"^43",["^1?",[["~$x"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",25,"^47","^3[","^9",25,"^48",1,"^3Z","^3[","^49",true,"^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"~$parse-tag",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",287,"^8",7,"^9",287,"^:",16,"^40",["^1?",["^41",["^1?",[["~$hiccup-tag"]]]]]],"^Q","~$reagent.impl.template/parse-tag","^6","reagent/impl/template.cljs","^:",16,"^43",["^1?",[["^67"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",287,"^47","^5B","^9",287,"^48",1,"^49",true,"^40",["^1?",["^41",["^1?",[["^67"]]]]]],"~$kv-conv",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",62,"^8",7,"^9",62,"^:",14,"^40",["^1?",["^41",["^1?",[["~$o","~$k","~$v"]]]]]],"^Q","~$reagent.impl.template/kv-conv","^6","reagent/impl/template.cljs","^:",14,"^43",["^1?",[["~$o","~$k","~$v"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",62,"^9",62,"^48",3,"^49",true,"^40",["^1?",["^41",["^1?",[["~$o","~$k","~$v"]]]]]],"~$key-from-vec",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",310,"^8",7,"^9",310,"^:",19,"^40",["^1?",["^41",["^1?",[["~$v"]]]]]],"^Q","~$reagent.impl.template/key-from-vec","^6","reagent/impl/template.cljs","^:",19,"^43",["^1?",[["~$v"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",310,"^47",["^P",["^4E","^4F"]],"^9",310,"^48",1,"^49",true,"^40",["^1?",["^41",["^1?",[["~$v"]]]]]],"~$js-val?",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",57,"^8",16,"^9",57,"^:",23,"^3Z","^3[","^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"^Q","~$reagent.impl.template/js-val?","^6","reagent/impl/template.cljs","^:",23,"^43",["^1?",[["~$x"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",57,"^47","^3[","^9",57,"^48",1,"^3Z","^3[","^49",true,"^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"~$input-unmount",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",256,"^8",7,"^9",256,"^:",20,"^40",["^1?",["^41",["^1?",[["^54"]]]]]],"^Q","~$reagent.impl.template/input-unmount","^6","reagent/impl/template.cljs","^:",20,"^43",["^1?",[["^54"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",256,"^47","^4E","^9",256,"^48",1,"^49",true,"^40",["^1?",["^41",["^1?",[["^54"]]]]]],"~$convert-custom-prop-value",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",94,"^8",7,"^9",94,"^:",32,"^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"^Q","~$reagent.impl.template/convert-custom-prop-value","^6","reagent/impl/template.cljs","^:",32,"^43",["^1?",[["~$x"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",94,"^47",["^P",[null,"^4E","^14","^4W"]],"^9",94,"^48",1,"^49",true,"^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"~$reagent-input-class",["^ ","^Q","~$reagent.impl.template/reagent-input-class","^6","reagent/impl/template.cljs","^7",264,"^8",1,"^9",264,"^:",25,"^5",["^ ","^6","reagent/impl/template.cljs","^7",264,"^8",6,"^9",264,"^:",25],"^3Z","^4F"],"~$native-element",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",345,"^8",7,"^9",345,"^:",21,"^40",["^1?",["^41",["^1?",[["~$parsed","~$argv","~$first"]]]]]],"^Q","~$reagent.impl.template/native-element","^6","reagent/impl/template.cljs","^:",21,"^43",["^1?",[["^6F","^6G","^6H"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",345,"^47","^4E","^9",345,"^48",3,"^49",true,"^40",["^1?",["^41",["^1?",[["^6F","^6G","^6H"]]]]]],"~$reagent-input",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",278,"^8",7,"^9",278,"^:",20,"^40",["^1?",["^41",["^1?",[[]]]]]],"^Q","~$reagent.impl.template/reagent-input","^6","reagent/impl/template.cljs","^:",20,"^43",["^1?",[[]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",278,"^47","^4F","^9",278,"^48",0,"^49",true,"^40",["^1?",["^41",["^1?",[[]]]]]],"~$fragment-element",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",322,"^8",7,"^9",322,"^:",23,"^40",["^1?",["^41",["^1?",[["^6G"]]]]]],"^Q","~$reagent.impl.template/fragment-element","^6","reagent/impl/template.cljs","^:",23,"^43",["^1?",[["^6G"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",322,"^47","^4E","^9",322,"^48",1,"^49",true,"^40",["^1?",["^41",["^1?",[["^6G"]]]]]],"~$vec-to-elem",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",373,"^8",7,"^9",373,"^:",18,"^40",["^1?",["^41",["^1?",[["~$v"]]]]]],"^Q","~$reagent.impl.template/vec-to-elem","^6","reagent/impl/template.cljs","^:",18,"^43",["^1?",[["~$v"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",373,"^47",["^P",[null,"^4E","^4M"]],"^9",373,"^48",1,"^49",true,"^40",["^1?",["^41",["^1?",[["~$v"]]]]]],"~$cache-get",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",45,"^8",7,"^9",45,"^:",16,"^40",["^1?",["^41",["^1?",[["~$o","~$k"]]]]]],"^Q","~$reagent.impl.template/cache-get","^6","reagent/impl/template.cljs","^:",16,"^43",["^1?",[["~$o","~$k"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",45,"^47",["^P",["^4E","^4F"]],"^9",45,"^48",2,"^49",true,"^40",["^1?",["^41",["^1?",[["~$o","~$k"]]]]]],"~$input-handle-change",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",225,"^8",7,"^9",225,"^:",26,"^40",["^1?",["^41",["^1?",[["^54","~$on-change","~$e"]]]]]],"^Q","~$reagent.impl.template/input-handle-change","^6","reagent/impl/template.cljs","^:",26,"^43",["^1?",[["^54","^6S","~$e"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",225,"^47","^4E","^9",225,"^48",3,"^49",true,"^40",["^1?",["^41",["^1?",[["^54","^6S","~$e"]]]]]],"~$make-element",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",472,"^8",7,"^9",472,"^:",19,"^40",["^1?",["^41",["^1?",[["^6G","^X","^55","~$first-child"]]]]]],"^Q","~$reagent.impl.template/make-element","^6","reagent/impl/template.cljs","^:",19,"^43",["^1?",[["^6G","^X","^55","^6V"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",472,"^9",472,"^48",4,"^49",true,"^40",["^1?",["^41",["^1?",[["^6G","^X","^55","^6V"]]]]]],"~$input-spec",["^ ","^Q","~$reagent.impl.template/input-spec","^6","reagent/impl/template.cljs","^7",268,"^8",1,"^9",268,"^:",16,"^5",["^ ","^6","reagent/impl/template.cljs","^7",268,"^8",6,"^9",268,"^:",16],"^3Z","~$cljs.core/IMap"],"~$expand-seq-dev",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",425,"^8",7,"^9",425,"^:",21,"^40",["^1?",["^41",["^1?",[["~$s","~$o"]]]]]],"^Q","~$reagent.impl.template/expand-seq-dev","^6","reagent/impl/template.cljs","^:",21,"^43",["^1?",[["~$s","~$o"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",425,"^47","~$array","^9",425,"^48",2,"^49",true,"^40",["^1?",["^41",["^1?",[["~$s","~$o"]]]]]],"~$convert-prop-value",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",67,"^8",7,"^9",67,"^:",25,"^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"^Q","~$reagent.impl.template/convert-prop-value","^6","reagent/impl/template.cljs","^:",25,"^43",["^1?",[["~$x"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",67,"^47",["^P",[null,"^4E","^14","^4W"]],"^9",67,"^48",1,"^49",true,"^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"~$cached-prop-name",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",49,"^8",7,"^9",49,"^:",23,"^40",["^1?",["^41",["^1?",[["~$k"]]]]]],"^Q","~$reagent.impl.template/cached-prop-name","^6","reagent/impl/template.cljs","^:",23,"^43",["^1?",[["~$k"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",49,"^47",["^P",[null,"^4E","^4F"]],"^9",49,"^48",1,"^49",true,"^40",["^1?",["^41",["^1?",[["~$k"]]]]]],"~$cached-custom-prop-name",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",81,"^8",7,"^9",81,"^:",30,"^40",["^1?",["^41",["^1?",[["~$k"]]]]]],"^Q","~$reagent.impl.template/cached-custom-prop-name","^6","reagent/impl/template.cljs","^:",30,"^43",["^1?",[["~$k"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",81,"^47",["^P",[null,"^4E","^4F"]],"^9",81,"^48",1,"^49",true,"^40",["^1?",["^41",["^1?",[["~$k"]]]]]],"~$these-inputs-have-selection-api",["^ ","^Q","~$reagent.impl.template/these-inputs-have-selection-api","^6","reagent/impl/template.cljs","^7",157,"^8",1,"^9",157,"^:",37,"^5",["^ ","^6","reagent/impl/template.cljs","^7",157,"^8",6,"^9",157,"^:",37],"^3Z","~$cljs.core/ISet"],"~$expand-seq",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",419,"^8",7,"^9",419,"^:",17,"^40",["^1?",["^41",["^1?",[["~$s"]]]]]],"^Q","~$reagent.impl.template/expand-seq","^6","reagent/impl/template.cljs","^:",17,"^43",["^1?",[["~$s"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",419,"^47","^71","^9",419,"^48",1,"^49",true,"^40",["^1?",["^41",["^1?",[["~$s"]]]]]],"~$expand-seq-check",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",435,"^8",7,"^9",435,"^:",23,"^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"^Q","~$reagent.impl.template/expand-seq-check","^6","reagent/impl/template.cljs","^:",23,"^43",["^1?",[["~$x"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",435,"^47",["^P",[null,"^4E","^4F"]],"^9",435,"^48",1,"^49",true,"^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"~$find-dom-node",["^ ","^Q","~$reagent.impl.template/find-dom-node","^6","reagent/impl/template.cljs","^7",152,"^8",1,"^9",152,"^:",23,"^5",["^ ","^6","reagent/impl/template.cljs","^7",152,"^8",10,"^9",152,"^:",23],"^3Z","^4F"],"~$cached-parse",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",340,"^8",7,"^9",340,"^:",19,"^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"^Q","~$reagent.impl.template/cached-parse","^6","reagent/impl/template.cljs","^:",19,"^43",["^1?",[["~$x"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",340,"^47",["^P",["^4E","^4F"]],"^9",340,"^48",1,"^49",true,"^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"~$try-get-key",["^ ","^3Y",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",300,"^8",7,"^9",300,"^:",18,"^40",["^1?",["^41",["^1?",[["~$x"]]]]]],"^Q","~$reagent.impl.template/try-get-key","^6","reagent/impl/template.cljs","^:",18,"^43",["^1?",[["~$x"]]],"^44",null,"^45",["^1?",[null,null]],"^8",1,"^46",false,"^7",300,"^9",300,"^48",1,"^49",true,"^40",["^1?",["^41",["^1?",[["~$x"]]]]]]],"^1=",["^ ","^J","^J","^F","^F","^[","^[","^Z","^Z","^13","^Z"],"~:cljs.analyzer/constants",["^ ","^18",["^P",["~:key","~:else","~:component-did-update","~:<>","~:reagent-render","~:on-write","~:id","~:class","~:component-will-unmount","~:display-name"]],"~:order",["^7G","^7L","^7M","^7K","^7O","^7H","^7N","^7J","^7F","^7I"]],"^1D",["^ ","^19",["^P",[]]],"^1E",["^ "],"^1F",["^10","^[","^?","^15","^17","^W","^Y","^11","^Z","^J","^F"]],"^T","^R","~:ns-specs",["^ "],"~:ns-spec-vars",["^P",[]],"~:compiler-options",["^1T",[["^7S","~:static-fns"],true,["^7S","~:shadow-tweaks"],null,["^7S","~:elide-asserts"],true,["^7S","~:optimize-constants"],null,["^7S","^1K"],null,["^7S","~:external-config"],null,["^7S","~:tooling-config"],null,["^7S","~:emit-constants"],null,["^7S","~:load-tests"],false,["^7S","~:form-size-threshold"],null,["^7S","~:infer-externs"],true,["^7S","^1M"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^7S","~:fn-invoke-direct"],null,["^7S","~:source-map"],null]]]