{"version":3,"sources":["mecca/view.cljs"],"mappings":"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","names":["mecca.view/note-guides","editor-x","G__51627","re-frame.core/subscribe","cljs.core.into.cljs$core$IFn$_invoke$arity$2","iter__4582__auto__","s__51629","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__51631","cljs.core/chunk-buffer","i__51630","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__51628","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","beat","cljs.core.range.cljs$core$IFn$_invoke$arity$3","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/mod","cljs.core/deref","mecca.view/note-targets","instrument","G__51633","G__51634","sharp?","G__51635","s__51637","xs__6292__auto__","iterys__4578__auto__","s__51639","b__51641","i__51640","iter__51638","fs__4579__auto__","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","iter__51636","time","pitch","cljs.core.range.cljs$core$IFn$_invoke$arity$1","cljs.core/not","and__4174__auto__","G__51648","G__51657","re-frame.core/dispatch","G__51642","G__51650","pitches","G__51643","G__51651","mecca.music/play-sample","G__51644","G__51652","cljs.core.get.cljs$core$IFn$_invoke$arity$2","G__51645","G__51653","G__51646","G__51654","G__51647","G__51655","mecca.view/note-cursor","focused","G__51659","G__51660","G__51661","x","y","cljs.core/last","mecca.editor.svg_paths.cljs$core$IFn$_invoke$arity$4","G__51662","mecca.editor/eraser-cursor","G__51663","mecca.editor/repeat-sign","G__51664","js/Error","mecca.mario/mario-icon","mecca.mario/shroom","mecca.mario/yoshi","mecca.mario/star","mecca.mario/flower","mecca.mario/gb","mecca.mario/dog","mecca.mario/kitty","mecca.mario/pig","mecca.mario/swan","mecca.mario/face","mecca.mario/plane","mecca.mario/boat","mecca.mario/car","mecca.mario/heart","mecca.view/score-notes","notes","G__51665","G__51666","s__51668","b__51670","i__51669","map__51671","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","iter__51667","map__51674","pitch-map","cljs.core/zipmap","G__51673","G__51676","mecca.mario/mario-note","or__4185__auto__","mecca.view/editor","G__51678","mario-run","G__51679","G__51680","mecca.mario/cloud","mecca.mario/hill","mecca.castle/brick-face","mecca.mario/mario-sm","mecca.editor/current-note-display","mecca.editor/note-blocks","mecca.mario/floor-tile","mecca.editor/staff-lines","mecca.editor/retract-editor","mecca.editor/treble-clef","mecca.editor/advance-editor","mecca.editor/advance-measure","mecca.editor/advance-end","G__51682","G__51683","mecca.view/mecca","mecca.transport/transport","mecca.editor/toolbar","cljs.core/chunk-first"],"sourcesContent":["(ns mecca.view\r\n  (:require [mecca.music :as music]\r\n            [re-frame.core :as rf :refer [subscribe dispatch]]\r\n            [mecca.castle :as castle]\r\n            [mecca.transport :as transport]\r\n            [mecca.editor :as editor :refer [svg-paths]]\r\n            [mecca.mario :as mario]))\r\n\r\n(defn note-guides []\r\n  (let [editor-x (subscribe [:editor-beat-start])]\r\n      (into [:g]\r\n            (for [beat (range 0 4.5 0.5)]\r\n              (if (= 0\r\n                     (mod (+ (dec @editor-x) beat) 4))\r\n                [:g\r\n                 ;[bar-number (/ beat 4) (+ 296 (* 120 (mod beat 8))) 64 0.05]\r\n                 [:line {:x1 (+ 8 (* 6 beat)) :x2 (+ 8 (* 6 beat))\r\n                         :y1 4 :y2 21 :stroke \"orange\"\r\n                         :stroke-width 0.25\r\n                         :stroke-dasharray 0.5}]]\r\n                [:line {:x1 (+ 8 (* 6 beat)) :x2 (+ 8 (* 6 beat))\r\n                        :y1 4 :y2 21 :stroke \"black\"\r\n                        :stroke-width 0.075\r\n                        :stroke-dasharray 0.5}])))))\r\n\r\n\r\n(defn note-targets []\r\n  (let [instrument (subscribe [:instrument])\r\n        editor-x (subscribe [:editor-beat-start])\r\n        sharp? (subscribe [:sharp?])]\r\n      (into [:g]\r\n            (for [time (range 0 4.5 0.5)\r\n                  pitch (range 19)]\r\n              ^{:key [time pitch]}\r\n              [:rect {:transform \"translate(6.5,4)\"\r\n                      :x (* 6 time)\r\n                      :y (- pitch 1)\r\n                      :height 1 :width 3\r\n                      :stroke \"black\"\r\n                      :stroke-width 0.2\r\n                      :fill \"gray\"\r\n                      :visibility \"hidden\"\r\n                      :opacity 0.2\r\n                      :pointer-events \"all\"\r\n                      :on-mouse-over #(if-not (and \r\n                                               @sharp?\r\n                                               (or (= pitch 12)\r\n                                                   (= pitch 15)\r\n                                                   (= pitch 8)\r\n                                                   (= pitch 5)\r\n                                                   (= pitch 1)\r\n                                                   (= pitch 0)))\r\n                                        (dispatch [:update-focus-note [time pitch]]))\r\n                      :on-mouse-out #(dispatch [:update-focus-note [nil nil]])\r\n                      :on-click (let [pitches [84 83 81 79 77 76 74 72 71 69 67 65 64 62 60 59 57 55 53]]\r\n                                  (cond\r\n                                    @(subscribe [:eraser?])\r\n                                    #(do (music/play-sample 18 63)\r\n                                       (dispatch [:remove-note (+ time (dec @editor-x))\r\n                                                  (get pitches pitch)]))\r\n                                    @(subscribe [:repeat?])\r\n                                    #(dispatch [:set-loop-end time])\r\n                                    :else\r\n                                    #(dispatch [:add-note @instrument\r\n                                                (+ time (dec @editor-x))\r\n                                                (get pitches pitch)])))}]))))\r\n\r\n(defn note-cursor []\r\n  (let [focused (subscribe [:focused-note-pos])\r\n        instrument (subscribe [:instrument])\r\n        sharp? (subscribe [:sharp?])]\r\n       (when-not (= @focused [nil nil])\r\n         (let [x (first @focused) y (last @focused)]\r\n           [:g\r\n            (if @sharp? (svg-paths [[\"black\" \"M15 46C15 47 14 47 13 47 13 47 12 47 12 46V37L7 39V49C7 49 6 50 6 50 5 50 5 49 5 49V40L3 40C3 40 2 40 2 40 2 40 1 40 1 39V35C1 35 1 34 2 34L5 33V23L3 24C3 24 2 24 2 24 2 24 1 23 1 23V19C1 19 1 18 2 18L5 17V7C5 6 5 6 6 6 6 6 7 6 7 7V16L12 14V4C12 4 13 3 13 3 14 3 15 4 15 4V13L17 13C17 12 17 12 17 12 18 12 18 13 18 14V17C18 18 18 18 17 19L15 20V30L17 29C17 29 17 29 17 29 18 29 18 29 18 30V34C18 34 18 35 17 35L15 36V46ZM7 22V32L12 31V21Z\"]]\r\n                                   (+ 68 (* 86 x)) (+ 18 (* 15 y)) 0.07))\r\n            (cond\r\n              @(subscribe [:eraser?])\r\n              [editor/eraser-cursor (+ 36 (* 30 x)) (+ (* 5 y) 20) 0.2]\r\n              @(subscribe [:repeat?])\r\n              [editor/repeat-sign (+ 7 (* 6 x)) 8 0.13]\r\n              :else\r\n              (case @instrument\r\n                1 [mario/mario-icon (+ 2 (* 30 x)) (+ (* 5 y) 9) 0.2]\r\n                2 [mario/shroom (+ 32 (* 30 x)) (+ (* 5 y) 12) 0.2]\r\n                3 [mario/yoshi (+ 32 (* 30 x)) (+ (* 5 y) 10) 0.2]\r\n                4 [mario/star (+ 32 (* 30 x)) (+ (* 5 y) 10) 0.2]\r\n                5 [mario/flower (+ 32 (* 30 x)) (+ (* 5 y) 10) 0.2]\r\n                6 [mario/gb (+ 32 (* 30 x)) (+ (* 5 y) 10) 0.2]\r\n                7 [mario/dog (+ 32 (* 30 x)) (+ (* 5 y) 10) 0.2]\r\n                8 [mario/kitty (+ 32 (* 30 x)) (+ (* 5 y) 10) 0.2]\r\n                9 [mario/pig (+ 32 (* 30 x)) (+ (* 5 y) 10) 0.2]\r\n                10 [mario/swan (+ 32 (* 30 x)) (+ (* 5 y) 10) 0.2]\r\n                11 [mario/face (+ 32 (* 30 x)) (+ (* 5 y) 10) 0.2]\r\n                12 [mario/plane (+ 32 (* 30 x)) (+ (* 5 y) 15) 0.2]\r\n                13 [mario/boat (+ 32  (* 30 x)) (+ (* 5 y) 12) 0.2]\r\n                14 [mario/car (+ 32 (* 30 x)) (+ (* 5 y) 12) 0.2]\r\n                15 [mario/heart (+ 32 (* 30 x)) (+ (* 5 y) 15) 0.2]))]))))\r\n\r\n(defn score-notes []\r\n   (let [notes (subscribe [:notes])\r\n         editor-x (subscribe [:editor-beat-start])]\r\n     (into [:g]\r\n           (for [{:keys [time instrument pitch]} @notes\r\n                 :when (<= (dec @editor-x) time (+ 16 (dec @editor-x)))]\r\n                    ^{:key [instrument time pitch]}\r\n                    (let [x (- time (dec @editor-x))\r\n                          pitch-map (zipmap [84 83 81 79 77 76 74 72 71 69 67 65 64 62 60 59 57 55 53]\r\n                                            (range 19))]\r\n                      [:g\r\n                       (if-not (get pitch-map pitch)\r\n                        (svg-paths [[\"black\" \"M15 46C15 47 14 47 13 47 13 47 12 47 12 46V37L7 39V49C7 49 6 50 6 50 5 50 5 49 5 49V40L3 40C3 40 2 40 2 40 2 40 1 40 1 39V35C1 35 1 34 2 34L5 33V23L3 24C3 24 2 24 2 24 2 24 1 23 1 23V19C1 19 1 18 2 18L5 17V7C5 6 5 6 6 6 6 6 7 6 7 7V16L12 14V4C12 4 13 3 13 3 14 3 15 4 15 4V13L17 13C17 12 17 12 17 12 18 12 18 13 18 14V17C18 18 18 18 17 19L15 20V30L17 29C17 29 17 29 17 29 18 29 18 29 18 30V34C18 34 18 35 17 35L15 36V46ZM7 22V32L12 31V21Z\"]]\r\n                                   (+ 68 (* 86 x)) (+ 18 (* 15 (get pitch-map (dec pitch)))) 0.07))\r\n                      (case instrument\r\n                        1 [mario/mario-note (+ 2 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 9) 0.2]\r\n                        2 [mario/shroom (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 12) 0.2]\r\n                        3 [mario/yoshi (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 10) 0.2]\r\n                        4 [mario/star (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 10) 0.2]\r\n                        5 [mario/flower (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 10) 0.2]\r\n                        6 [mario/gb (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 10) 0.2]\r\n                        7 [mario/dog (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 10) 0.2]\r\n                        8 [mario/kitty (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 10) 0.2]\r\n                        9 [mario/pig (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 10) 0.2]\r\n                        10 [mario/swan (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 10) 0.2]\r\n                        11 [mario/face (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 10) 0.2]\r\n                        12 [mario/plane (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 15) 0.2]\r\n                        13 [mario/boat (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 12) 0.2]\r\n                        14 [mario/car (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 12) 0.2]\r\n                        15 [mario/heart (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 15) 0.2]\r\n                        [mario/mario-note (+ 2 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 9) 0.2])])))))\r\n\r\n(defn editor []\r\n  (let [editor-x (subscribe [:editor-beat-start])\r\n        mario-run (subscribe [:mario-run])]\r\n      (when (= 20 @mario-run)\r\n        (dispatch [:jump-reset]))\r\n      [:svg {:width \"100%\"\r\n             :view-box \"0 0 36 36\"\r\n             :style {:cursor \"url(/images/hand.png),pointer\"}}\r\n       [mario/cloud 1 18]\r\n       [mario/hill 40]\r\n       [castle/brick-face 170 18 6]\r\n       [castle/brick-face 155 48 10]\r\n       [mario/mario-sm]\r\n       [editor/current-note-display 0 0 0.22]\r\n       [editor/note-blocks]\r\n       [mario/floor-tile 9]\r\n       [:rect#editorframe\r\n          {:stroke \"black\"\r\n           :stroke-width 0.2\r\n           :fill \"none\"\r\n           :height 20 :width 34.9 :x 0.25 :y 14.5}]\r\n       [:g.staff {:transform \"translate(0,13.5) scale(1)\"}\r\n        [editor/staff-lines]\r\n        [editor/retract-editor 2]\r\n         [editor/treble-clef\r\n          (- 0.8 (* 6 (dec @editor-x)))\r\n          6.3]\r\n        [editor/advance-editor]\r\n        [editor/advance-measure]\r\n        [editor/advance-end]\r\n        [note-targets]\r\n        [note-guides]\r\n        [note-cursor]\r\n        [score-notes]\r\n        (when @(subscribe [:loop-end])\r\n          [editor/repeat-sign (+ 7 (* 6 @(subscribe [:loop-end]))) 8 0.13])]]))\r\n\r\n(defn mecca []\r\n  [:div\r\n   [editor]\r\n   [transport/transport 0 0 0.5]\r\n   [editor/toolbar 0 0]])\r\n"]}